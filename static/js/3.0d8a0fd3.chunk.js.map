{"version":3,"sources":["pages/Homepage/style.js","pages/Homepage/FormChangeNumber.js","pages/Homepage/index.js"],"names":["WordLine","styled","div","_templateObject","theme","color","border","font","family","secondary","Heading","_templateObject2","Button","_templateObject3","FormChangeNumber","_useContext","useContext","wordContext","numberWord","handleChangeNumber","_useState","useState","_useState2","Object","slicedToArray","number","setNumber","react_default","a","createElement","onSubmit","e","preventDefault","style","fontSize","fontWeight","fontFamily","components","block","size","value","onChange","target","type","marginBottom","space","htmlType","memo","wordsToday","reload","updateStatusWord","padding","display","label","icon","icons","setting","Homepage_FormChangeNumber","marginLeft","onClick","role","map","w","i","key","word","textDecoration","status"],"mappings":"ygCAIA,IAAMA,EAAWC,IAAOC,IAAVC,IAOeC,IAAMC,MAAMC,OACxBF,IAAMG,KAAKC,OAAOC,WAW7BC,EAAUT,IAAOC,IAAVS,IAKgBP,IAAMC,MAAMC,QAInCM,EAASX,IAAOC,IAAVW,IACUT,IAAMC,MAAMC,wBCYnBQ,EAvCU,WAAM,IAAAC,EACcC,qBAAWC,KAAe,GAA7DC,EADqBH,EACrBG,WAAYC,EADSJ,EACTI,mBADSC,EAEDC,mBAASH,GAFRI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEtBK,EAFsBH,EAAA,GAEdI,EAFcJ,EAAA,GAa7B,OACEK,EAAAC,EAAAC,cAAA,QAAMC,SANS,SAAAC,GACfA,EAAEC,iBACFb,EAAmBM,KAKjBE,EAAAC,EAAAC,cAAA,KACEI,MAAO,CACLC,SAAU,GACVC,WAAY,IACZC,WAAYhC,IAAMG,KAAKC,OAAOC,YAJlC,sBASAkB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,QACLC,MAAOf,EACPgB,SAxBW,SAAAV,GACfL,EAAUK,EAAEW,OAAOF,QAwBfG,KAAK,WAEPhB,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEW,aAAcxC,IAAMmC,KAAKM,SACvClB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,OAAK,EAACC,KAAK,QAAQI,KAAK,UAAUG,SAAS,UAAnD,gBCyCSC,yBArEE,WAAM,IAAAhC,EAC4BC,qBAAWC,KAApD+B,EADajC,EACbiC,WAAYC,EADClC,EACDkC,OAAQC,EADPnC,EACOmC,iBAC5B,OACEvB,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEkB,QAAS,IACrBxB,EAAAC,EAAAC,cAACnB,EAAD,KACEiB,EAAAC,EAAAC,cAAA,MACEI,MAAO,CACLC,SAAU,GACVC,WAAY,MAHhB,SAQAR,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEmB,QAAS,SACrBzB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEgB,MACE1B,EAAAC,EAAAC,cAACjB,EAAD,KACEe,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMiB,KAAMC,IAAMC,QAASjB,KAAM,KAAO,MAI5CZ,EAAAC,EAAAC,cAAC4B,EAAD,OAGF9B,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEyB,WAAY,MAE1B/B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEgB,MACE1B,EAAAC,EAAAC,cAACjB,EAAD,KACEe,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMiB,KAAMC,IAAMN,OAAQV,KAAM,OAIpCZ,EAAAC,EAAAC,cAAA,KACEI,MAAO,CACLC,SAAU,GACVC,WAAY,IACZC,WAAYhC,IAAMG,KAAKC,OAAOC,YAJlC,mCASAkB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEM,KAAK,UACLgB,QAASV,EACTX,OAAK,EACLsB,KAAK,eACLrB,KAAK,SALP,aAaLS,EAAWa,IAAI,SAACC,EAAGC,GAAJ,OACdpC,EAAAC,EAAAC,cAAC7B,EAAD,CACE2D,QAAS,kBAAMT,EAAiBY,IAChCE,IAAKF,EAAEG,KACPhC,MAAO,CAAEiC,eAAgBJ,EAAEK,OAAS,eAAiB,SAErDxC,EAAAC,EAAAC,cAAA,YAAOkC,EAAI,EAAX,KACCD,EAAEG","file":"static/js/3.0d8a0fd3.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nimport theme from '../../configs/theme';\n\nconst WordLine = styled.div`\n  height: 70px;\n  display: flex;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n  padding: 15px;\n  border-bottom: 1px solid ${theme.color.border};\n  font-family: ${theme.font.family.secondary};\n\n  span {\n    text-align: center;\n    display: inline-block;\n    width: 50px;\n    margin-right: 30px;\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst Heading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  border-bottom: 1px solid ${theme.color.border};\n  background: #f9f9f9;\n`;\n\nconst Button = styled.div`\n  border: 1px solid ${theme.color.border};\n  height: 40px;\n  padding: 0 15px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: #fff;\n`;\n\nexport { WordLine, Heading, Button };\n","import React, { useContext, useState } from 'react';\nimport { Input, Button } from '../../components';\nimport theme from '../../configs/theme';\n\nimport wordContext from '../../state/wordContext';\n\nconst FormChangeNumber = () => {\n  const { numberWord, handleChangeNumber } = useContext(wordContext || 9);\n  const [number, setNumber] = useState(numberWord);\n\n  const onChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    handleChangeNumber(number);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <p\n        style={{\n          fontSize: 20,\n          fontWeight: 700,\n          fontFamily: theme.font.family.secondary\n        }}\n      >\n        Change number word\n      </p>\n      <Input\n        block\n        size=\"large\"\n        value={number}\n        onChange={onChange}\n        type=\"number\"\n      />\n      <div style={{ marginBottom: theme.size.space }} />\n      <Button block size=\"large\" type=\"primary\" htmlType=\"submit\">\n        Change now\n      </Button>\n    </form>\n  );\n};\n\nexport default FormChangeNumber;\n","// @flow\nimport React, { memo, useContext } from 'react';\nimport wordContext from '../../state/wordContext';\nimport { Icon, Modal, Button } from '../../components';\n\nimport { WordLine, Heading, Button as ButtonHome } from './style';\nimport icons from '../../assets/icons';\nimport FormChangeNumber from './FormChangeNumber';\nimport theme from '../../configs/theme';\n\nconst Homepage = () => {\n  const { wordsToday, reload, updateStatusWord } = useContext(wordContext);\n  return (\n    <div style={{ padding: 0 }}>\n      <Heading>\n        <h2\n          style={{\n            fontSize: 20,\n            fontWeight: 300\n          }}\n        >\n          Words\n        </h2>\n        <div style={{ display: 'flex' }}>\n          <Modal\n            label={\n              <ButtonHome>\n                <Icon icon={icons.setting} size={15} />{' '}\n              </ButtonHome>\n            }\n          >\n            <FormChangeNumber />\n          </Modal>\n\n          <div style={{ marginLeft: 10 }} />\n\n          <Modal\n            label={\n              <ButtonHome>\n                <Icon icon={icons.reload} size={15} />\n              </ButtonHome>\n            }\n          >\n            <p\n              style={{\n                fontSize: 20,\n                fontWeight: 700,\n                fontFamily: theme.font.family.secondary\n              }}\n            >\n              Are you sure reload list words?\n            </p>\n            <Button\n              type=\"primary\"\n              onClick={reload}\n              block\n              role=\"presentation\"\n              size=\"large\"\n            >\n              Reload\n            </Button>\n          </Modal>\n        </div>\n      </Heading>\n\n      {wordsToday.map((w, i) => (\n        <WordLine\n          onClick={() => updateStatusWord(w)}\n          key={w.word}\n          style={{ textDecoration: w.status ? 'line-through' : 'none' }}\n        >\n          <span>{i + 1}.</span>\n          {w.word}\n        </WordLine>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Homepage);\n"],"sourceRoot":""}