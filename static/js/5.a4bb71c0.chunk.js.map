{"version":3,"sources":["pages/Homepage/NoWord.js","pages/Homepage/TabDay.js","pages/Homepage/TabWeek.js","pages/Homepage/TabMonth.js","pages/Homepage/Tabs.js","pages/Homepage/Heading.js","pages/Homepage/index.js","pages/Homepage/Word.js","pages/Homepage/style.js"],"names":["memo","react_default","a","createElement","style","display","alignItems","justifyContent","padding","textAlign","src","no_word","alt","width","fontSize","fontFamily","theme","font","family","secondary","select","connect","values","context","_ref","wordsDay","words_done","filter","w","type","length","Homepage_NoWord","map","i","Word","key","word","Object","objectSpread","number","wordsWeek","wordsMonth","TabHeadingStyle","styled","div","_templateObject","active","color","primary","text","_ref2","TabHeading","_ref3","title","onClick","rest","objectWithoutProperties","assign","TabPanel","_ref4","children","TabToday","enhance","_ref5","wordsToday","reload","wordNotDone","find","status","Fragment","margin","components","size","block","Tabs","_useState","useState","_useState2","slicedToArray","activeTab","setActiveTab","handleChangeTab","e","toNumber","target","id","gridTemplateColumns","borderBottom","background","Tabs_TabHeading","Homepage_TabDay","Homepage_TabWeek","Homepage_TabMonth","user","paddingRight","displayName","lineHeight","react_router_dom","to","Homepage_Heading","Homepage_Tabs","ref","firestore","collection","ref1","updateTypeDate","_Users_daoduytan_Documents_Projects_dict_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setW","uid","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","position","_style__WEBPACK_IMPORTED_MODULE_7__","concat","top","right","bottom","_components__WEBPACK_IMPORTED_MODULE_3__","icon","icons","check","newType","doc","where","get","then","snapshot","empty","forEach","update","_Users_daoduytan_Documents_Projects_dict_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","add","role","WordLine","Link","border","HeadingWrap","_templateObject2","space","_templateObject3"],"mappings":"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","file":"static/js/5.a4bb71c0.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nimport { no_word } from '../../assets/images';\nimport theme from '../../configs/theme';\n\nconst NoWord = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '70px 0'\n      }}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <img src={no_word} alt=\"\" style={{ width: 200 }} />\n        <div style={{ fontSize: 18, fontFamily: theme.font.family.secondary }}>\n          No word\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(NoWord);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabDay = ({ words_done }: TabDayProps) => {\n  const wordsDay = words_done.filter(w => w.type === 'day');\n\n  if (wordsDay.length === 0) return <NoWord />;\n\n  return wordsDay.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'day' }} type=\"day\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabDay);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabWeek = ({ words_done }: TabDayProps) => {\n  const wordsWeek = words_done.filter(w => w.type === 'week');\n\n  if (wordsWeek.length === 0) return <NoWord />;\n\n  return wordsWeek.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'week' }} type=\"week\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabWeek);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabMonth = ({ words_done }: TabDayProps) => {\n  const wordsMonth = words_done.filter(w => w.type === 'month');\n\n  if (wordsMonth.length === 0) return <NoWord />;\n\n  return wordsMonth.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'month' }} type=\"month\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabMonth);\n","// @flow\nimport React, { useState } from 'react';\nimport { toNumber, find } from 'lodash/fp';\n\nimport styled from 'styled-components';\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport theme from '../../configs/theme';\n\nimport TabDay from './TabDay';\nimport TabWeek from './TabWeek';\nimport TabMonth from './TabMonth';\nimport { Button } from '../../components';\n\nconst TabHeadingStyle = styled.div`\n  flex: 1;\n  padding: 15px 10px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 14px;\n  text-transform: uppercase;\n  position: relative;\n\n  color: ${({ active }) => (active ? theme.color.primary : theme.color.text)};\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n    display: block;\n    height: 2px;\n    background: ${({ active }) =>\n      active ? theme.color.primary : 'transparent'};\n  }\n`;\n\ntype TabHeadingProps = {\n  title: String,\n  onClick: Function,\n  active: Boolean\n};\n\nconst TabHeading = ({ title, onClick, active, ...rest }: TabHeadingProps) => {\n  return (\n    <TabHeadingStyle onClick={onClick} active={active} {...rest}>\n      {title}\n    </TabHeadingStyle>\n  );\n};\n\nconst TabPanel = ({ children }) => children;\n\nconst enhance = connect([\n  {\n    values: ['wordsToday', 'reload'],\n    context: 'wordContext'\n  }\n]);\n\nconst TabToday = enhance(({ wordsToday, reload }) => {\n  const wordNotDone = find(w => w.status === false, wordsToday);\n\n  return (\n    <>\n      {wordsToday.map((w, i) => (\n        <Word\n          key={w.word}\n          word={{ ...w, number: i, type: w.type || 'today' }}\n          type=\"today\"\n        />\n      ))}\n\n      {!wordNotDone && (\n        <div style={{ margin: 30 }}>\n          <Button type=\"primary\" size=\"large\" block onClick={reload}>\n            Load more\n          </Button>\n        </div>\n      )}\n    </>\n  );\n});\n\nconst Tabs = () => {\n  const [activeTab, setActiveTab] = useState(1);\n\n  const handleChangeTab = e => {\n    setActiveTab(toNumber(e.target.id));\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(4, 1fr)',\n          borderBottom: '1px solid #ddd',\n          background: '#fff'\n        }}\n      >\n        <TabHeading\n          title=\"Today\"\n          onClick={handleChangeTab}\n          id={1}\n          active={activeTab === 1}\n        />\n        <TabHeading\n          title=\"Day\"\n          onClick={handleChangeTab}\n          id={2}\n          active={activeTab === 2}\n        />\n        <TabHeading\n          title=\"Week\"\n          onClick={handleChangeTab}\n          id={3}\n          active={activeTab === 3}\n        />\n        <TabHeading\n          title=\"Month\"\n          onClick={handleChangeTab}\n          id={4}\n          active={activeTab === 4}\n        />\n      </div>\n\n      <div>\n        {activeTab === 1 && (\n          <TabPanel>\n            <TabToday />\n          </TabPanel>\n        )}\n\n        {activeTab === 2 && (\n          <TabPanel>\n            <TabDay />\n          </TabPanel>\n        )}\n\n        {activeTab === 3 && (\n          <TabPanel>\n            <TabWeek />\n          </TabPanel>\n        )}\n\n        {activeTab === 4 && (\n          <TabPanel>\n            <TabMonth />\n          </TabPanel>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tabs;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport connect from '../../state/connect';\nimport { Avatar } from '../../components';\nimport { HeadingWrap } from './style';\n\ntype HeadingProps = { user: any };\n\nconst Heading = ({ user }: HeadingProps) => {\n  return (\n    <>\n      <HeadingWrap>\n        <div style={{ paddingRight: 30 }}>\n          <h2 style={{ margin: '5px 0', fontSize: 30 }}>\n            Hi, {user.displayName}\n          </h2>\n          <p style={{ lineHeight: 1.5 }}>Learn vocabulary every day</p>\n        </div>\n\n        <Link to=\"/profile\">\n          <Avatar />\n        </Link>\n      </HeadingWrap>\n    </>\n  );\n};\n\nconst select = [{ values: ['user'], context: 'authContext' }];\n\nexport default connect(select)(Heading);\n","// @flow\nimport React, { memo } from 'react';\n\nimport Tabs from './Tabs';\nimport Heading from './Heading';\n\nconst Homepage = () => {\n  return (\n    <>\n      <Heading />\n\n      <Tabs />\n    </>\n  );\n};\n\nexport default memo(Homepage);\n","import React, { useState } from 'react';\n\nimport { Icon } from '../../components';\nimport icons from '../../assets/icons';\nimport { firestore } from '../../api';\nimport theme from '../../configs/theme';\nimport { WordLine } from './style';\nimport connect from '../../state/connect';\n\nconst ref = firestore.collection('user');\nconst ref1 = firestore.collection('words_done');\n\ntype WordProps = {\n  word: {\n    word: String,\n    status: String,\n    number: Number,\n    id: String\n  },\n  user: {\n    uid: String\n  },\n  type: String,\n  updateTypeDate: Function\n};\n\nconst Word = ({ word, type, user, updateTypeDate }: WordProps) => {\n  const [w, setW] = useState(word);\n\n  const { uid } = user;\n\n  console.log('user', uid);\n\n  const handleChangeType = () => {\n    const newType = () => {\n      if (type === 'today') {\n        return 'day';\n      }\n      if (type === 'day') {\n        return 'week';\n      }\n      if (type === 'week') {\n        return 'month';\n      }\n\n      return 'day';\n    };\n\n    ref\n      .doc(uid)\n      .collection('word_today')\n      .where('word', '==', w.word)\n      .get()\n      .then(snapshot => {\n        if (snapshot.empty) {\n          return null;\n        }\n\n        return snapshot.forEach(doc => {\n          ref\n            .doc(uid)\n            .collection('word_today')\n            .doc(doc.id)\n            .update({\n              type: newType()\n            });\n        });\n      });\n\n    setW({ ...w, type: newType() });\n\n    updateTypeDate({ ...w, type: newType() });\n\n    if (type === 'today') {\n      ref1.add({ ...word, uid, type: newType() });\n    } else {\n      ref1\n\n        .where('uid', '==', user.uid)\n        .get()\n        .then(snapshot => {\n          if (snapshot.empty) {\n            return null;\n          }\n\n          return snapshot.forEach(doc => {\n            ref1.doc(doc.id).update({\n              type: newType()\n            });\n          });\n        });\n    }\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <WordLine\n        to={`/word/${w.word}`}\n        key={w.word}\n        style={{\n          color: w.status ? theme.color.primary : theme.color.text\n        }}\n      >\n        <span>{w.number + 1}.</span>\n        {w.word}\n      </WordLine>\n\n      {w.status && w.type !== type && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <Icon icon={icons.check} size={20} color={theme.color.secondary} />\n        </div>\n      )}\n\n      {w.status && w.type === type && w.type !== 'month' && (\n        <div\n          onClick={handleChangeType}\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n          role=\"presentation\"\n        >\n          <Icon icon={icons.right} size={20} color={theme.color.primary} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst select = [\n  { values: ['user'], context: 'authContext' },\n  {\n    values: ['updateTypeDate'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(Word);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport theme from '../../configs/theme';\n\nconst WordLine = styled(Link)`\n  height: 70px;\n  display: flex;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n  padding: 15px;\n  border-bottom: 1px solid ${theme.color.border};\n  font-family: ${theme.font.family.secondary};\n\n  span {\n    text-align: center;\n    display: inline-block;\n    width: 50px;\n    margin-right: 30px;\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst HeadingWrap = styled.div`\n  // background: ${theme.color.primary};\n  // color: #fff;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${theme.size.space + 5}px ${theme.size.space * 2}px\n    ${theme.size.space - 5}px ${theme.size.space * 2}px;\n    \n`;\n\nconst Button = styled.div`\n  border: 1px solid ${theme.color.border};\n  height: 40px;\n  padding: 0 15px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: #fff;\n`;\n\nexport { WordLine, HeadingWrap, Button };\n"],"sourceRoot":""}