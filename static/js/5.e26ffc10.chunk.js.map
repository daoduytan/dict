{"version":3,"sources":["pages/Homepage/style.js","pages/Homepage/Word.js","pages/Homepage/NoWord.js","pages/Homepage/TabDay.js","pages/Homepage/TabWeek.js","pages/Homepage/TabMonth.js","pages/Homepage/Tabs.js","pages/Homepage/Heading.js","pages/Homepage/index.js","state/rootContext.js","state/connect.js"],"names":["WordLine","styled","Link","_templateObject","theme","color","border","font","family","secondary","HeadingWrap","div","_templateObject2","primary","size","space","ref","_templateObject3","firestore","collection","ref1","connect","values","context","_ref","word","type","user","updateTypeDate","_useState","useState","_useState2","Object","slicedToArray","w","setW","uid","console","log","react_default","a","createElement","style","position","to","concat","key","status","text","number","top","right","bottom","padding","display","alignItems","components","icon","icons","check","onClick","newType","doc","where","get","then","snapshot","empty","forEach","id","update","objectSpread","add","role","memo","justifyContent","textAlign","src","no_word","alt","width","fontSize","fontFamily","select","wordsDay","words_done","filter","length","Homepage_NoWord","map","i","Homepage_Word","wordsWeek","wordsMonth","TabHeadingStyle","Tabs_templateObject","active","_ref2","TabHeading","_ref3","title","rest","objectWithoutProperties","assign","TabPanel","_ref4","children","TabToday","_ref5","wordsToday","Tabs","activeTab","setActiveTab","handleChangeTab","e","toNumber","target","gridTemplateColumns","borderBottom","background","Tabs_TabHeading","Homepage_TabDay","Homepage_TabWeek","Homepage_TabMonth","Fragment","paddingRight","margin","displayName","lineHeight","react_router_dom","Homepage_Heading","Homepage_Tabs","authContext","wordContext","Component","props","newProps","s","state","useContext","rootContext","element","defineProperty","flatProps"],"mappings":"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","file":"static/js/5.e26ffc10.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport theme from '../../configs/theme';\n\nconst WordLine = styled(Link)`\n  height: 70px;\n  display: flex;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n  padding: 15px;\n  border-bottom: 1px solid ${theme.color.border};\n  font-family: ${theme.font.family.secondary};\n\n  span {\n    text-align: center;\n    display: inline-block;\n    width: 50px;\n    margin-right: 30px;\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst HeadingWrap = styled.div`\n  // background: ${theme.color.primary};\n  // color: #fff;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${theme.size.space + 5}px ${theme.size.space * 2}px\n    ${theme.size.space - 5}px ${theme.size.space * 2}px;\n    \n`;\n\nconst Button = styled.div`\n  border: 1px solid ${theme.color.border};\n  height: 40px;\n  padding: 0 15px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: #fff;\n`;\n\nexport { WordLine, HeadingWrap, Button };\n","import React, { memo, useState } from 'react';\n\nimport { Icon } from '../../components';\nimport icons from '../../assets/icons';\nimport { firestore } from '../../api';\nimport theme from '../../configs/theme';\nimport { WordLine } from './style';\nimport connect from '../../state/connect';\n\nconst ref = firestore.collection('user');\nconst ref1 = firestore.collection('words_done');\n\ntype WordProps = {\n  word: {\n    word: String,\n    status: String,\n    number: Number,\n    id: String\n  },\n  user: {\n    uid: String\n  },\n  type: String\n};\n\nconst Word = ({ word, type, user, updateTypeDate }: WordProps) => {\n  const [w, setW] = useState(word);\n\n  const { uid } = user;\n\n  console.log('user', uid);\n\n  const handleChangeType = () => {\n    const newType = () => {\n      if (type === 'today') {\n        return 'day';\n      }\n      if (type === 'day') {\n        return 'week';\n      }\n      if (type === 'week') {\n        return 'month';\n      }\n\n      return 'day';\n    };\n\n    ref\n      .doc(uid)\n      .collection('word_today')\n      .where('word', '==', w.word)\n      .get()\n      .then(snapshot => {\n        if (snapshot.empty) {\n          return null;\n        }\n\n        console.log('dasdas');\n\n        snapshot.forEach(doc => {\n          ref\n            .doc(uid)\n            .collection('word_today')\n            .doc(doc.id)\n            .update({\n              type: newType()\n            });\n        });\n      });\n\n    setW({ ...w, type: newType() });\n\n    updateTypeDate({ ...w, type: newType() });\n\n    if (type === 'today') {\n      ref1.add({ ...word, uid, type: newType() });\n    } else {\n      ref1\n\n        .where('uid', '==', user.uid)\n        .get()\n        .then(snapshot => {\n          if (snapshot.empty) {\n            return null;\n          }\n\n          snapshot.forEach(doc => {\n            ref1.doc(doc.id).update({\n              type: newType()\n            });\n          });\n        });\n    }\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <WordLine\n        to={`/word/${w.word}`}\n        key={w.word}\n        style={{\n          color: w.status ? theme.color.primary : theme.color.text\n        }}\n      >\n        <span>{w.number + 1}.</span>\n        {w.word}\n      </WordLine>\n\n      {w.status && w.type !== type && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <Icon icon={icons.check} size={20} color={theme.color.secondary} />\n        </div>\n      )}\n\n      {w.status && w.type === type && w.type !== 'month' && (\n        <div\n          onClick={handleChangeType}\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n          role=\"presentation\"\n        >\n          <Icon icon={icons.right} size={20} color={theme.color.primary} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst select = [\n  { values: ['user'], context: 'authContext' },\n  {\n    values: ['updateTypeDate'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(Word);\n","import React, { memo } from 'react';\n\nimport { no_word } from '../../assets/images';\nimport theme from '../../configs/theme';\n\nconst NoWord = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '70px 0'\n      }}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <img src={no_word} alt=\"\" style={{ width: 200 }} />\n        <div style={{ fontSize: 18, fontFamily: theme.font.family.secondary }}>\n          No word\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(NoWord);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabDay = ({ words_done }: TabDayProps) => {\n  const wordsDay = words_done.filter(w => w.type === 'day');\n\n  if (wordsDay.length === 0) return <NoWord />;\n\n  return wordsDay.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'day' }} type=\"day\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabDay);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabWeek = ({ words_done }: TabDayProps) => {\n  const wordsWeek = words_done.filter(w => w.type === 'week');\n\n  if (wordsWeek.length === 0) return <NoWord />;\n\n  return wordsWeek.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'week' }} type=\"week\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabWeek);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabMonth = ({ words_done }: TabDayProps) => {\n  const wordsMonth = words_done.filter(w => w.type === 'month');\n\n  if (wordsMonth.length === 0) return <NoWord />;\n\n  return wordsMonth.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'month' }} type=\"month\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabMonth);\n","import React, { useState } from 'react';\nimport { toNumber } from 'lodash/fp';\n\nimport styled from 'styled-components';\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport theme from '../../configs/theme';\n\nimport TabDay from './TabDay';\nimport TabWeek from './TabWeek';\nimport TabMonth from './TabMonth';\n\nconst TabHeadingStyle = styled.div`\n  flex: 1;\n  padding: 15px 10px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  position: relative;\n\n  color: ${({ active }) => (active ? theme.color.primary : theme.color.text)};\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n    display: block;\n    height: 2px;\n    background: ${({ active }) =>\n      active ? theme.color.primary : 'transparent'};\n  }\n`;\n\nconst TabHeading = ({ title, onClick, active, ...rest }) => {\n  return (\n    <TabHeadingStyle onClick={onClick} active={active} {...rest}>\n      {title}\n    </TabHeadingStyle>\n  );\n};\n\nconst TabPanel = ({ children }) => children;\n\nconst select = [\n  {\n    values: ['wordsToday'],\n    context: 'wordContext'\n  }\n];\n\nconst TabToday = connect(select)(({ wordsToday }) =>\n  wordsToday.map((w, i) => (\n    <Word\n      key={w.word}\n      word={{ ...w, number: i, type: w.type || 'today' }}\n      type=\"today\"\n    />\n  ))\n);\n\nconst Tabs = () => {\n  const [activeTab, setActiveTab] = useState(1);\n\n  const handleChangeTab = e => {\n    setActiveTab(toNumber(e.target.id));\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(4, 1fr)',\n          borderBottom: '1px solid #ddd',\n          background: '#fff'\n        }}\n      >\n        <TabHeading\n          title=\"Today\"\n          onClick={handleChangeTab}\n          id={1}\n          active={activeTab === 1}\n        />\n        <TabHeading\n          title=\"Day\"\n          onClick={handleChangeTab}\n          id={2}\n          active={activeTab === 2}\n        />\n        <TabHeading\n          title=\"Week\"\n          onClick={handleChangeTab}\n          id={3}\n          active={activeTab === 3}\n        />\n        <TabHeading\n          title=\"Month\"\n          onClick={handleChangeTab}\n          id={4}\n          active={activeTab === 4}\n        />\n      </div>\n\n      <div>\n        {activeTab === 1 && (\n          <TabPanel>\n            <TabToday />\n          </TabPanel>\n        )}\n\n        {activeTab === 2 && (\n          <TabPanel>\n            <TabDay />\n          </TabPanel>\n        )}\n\n        {activeTab === 3 && (\n          <TabPanel>\n            <TabWeek />\n          </TabPanel>\n        )}\n\n        {activeTab === 4 && (\n          <TabPanel>\n            <TabMonth />\n          </TabPanel>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tabs;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport connect from '../../state/connect';\nimport { Avatar } from '../../components';\nimport { HeadingWrap } from './style';\n\ntype HeadingProps = { user: any };\n\nconst Heading = ({ user }: HeadingProps) => {\n  console.log('dsda', user);\n  return (\n    <>\n      <HeadingWrap>\n        <div style={{ paddingRight: 30 }}>\n          <h2 style={{ margin: '5px 0', fontSize: 30 }}>\n            Hi, {user.displayName}\n          </h2>\n          <p style={{ lineHeight: 1.5, fontSize: 14 }}>\n            Learn vocabulary every day\n          </p>\n        </div>\n\n        <Link to=\"/profile\">\n          <Avatar />\n        </Link>\n      </HeadingWrap>\n    </>\n  );\n};\n\nconst select = [{ values: ['user'], context: 'authContext' }];\n\nexport default connect(select)(Heading);\n","// @flow\nimport React, { memo } from 'react';\n\nimport Tabs from './Tabs';\nimport Heading from './Heading';\n\nconst Homepage = () => {\n  return (\n    <>\n      <Heading />\n\n      <Tabs />\n    </>\n  );\n};\n\nexport default memo(Homepage);\n","import wordContext from './wordContext';\nimport authContext from './authContext';\n\nconst context = {\n  authContext,\n  wordContext\n};\n\nexport default context;\n","// @flow\nimport { forEach } from 'lodash/fp';\nimport React, { useContext } from 'react';\nimport rootContext from './rootContext';\n\nconst connect = select => Component => props => {\n  let newProps = {};\n\n  forEach(s => {\n    if (s.context) {\n      const { values, context } = s;\n\n      const state = useContext(rootContext[context]);\n      values.forEach(element => {\n        newProps = { ...newProps, [element]: state[element] };\n      });\n    }\n  }, select);\n\n  const flatProps = { ...props, ...newProps };\n\n  return <Component {...flatProps} />;\n};\n\nexport default connect;\n"],"sourceRoot":""}