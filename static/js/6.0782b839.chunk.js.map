{"version":3,"sources":["pages/Detail/style.js","pages/Detail/index.js"],"names":["DetailWrap","styled","div","DetailContent","theme","size","space","CardStyle","CarTitleStyle","color","primary","CardTitleSubStyle","NumberStyle","secondary","connect","values","context","match","updateStatusWord","wordsToday","params","useState","loading","setLoading","data","setData","useEffect","url","w","Axios","get","then","res","title","style","textAlign","fontSize","fontWeight","lineHeight","fontFamily","font","family","margin","display","alignItems","justifyContent","map","d","key","pron","posgram","p","marginLeft","content","c","l","def","flex","trans","examp","ex","i","marginBottom","word","find","type","checkWord","block","onClick","status","icon","icons","check"],"mappings":"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","file":"static/js/6.0782b839.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport theme from '../../configs/theme';\n\nconst DetailWrap = styled.div``;\n\nconst Heading = styled.div`\n  display: flex;\n  alignitems: center;\n  padding: ${theme.size.space * 2}px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: #fff;\n`;\n\nconst DetailContent = styled.div`\n  padding: ${theme.size.space}px ${theme.size.space * 2}px;\n`;\n\nconst CardStyle = styled.div`\n  padding: 15px;\n  margin-bottom: 15px;\n  border: 1px solid #eee;\n  background: #fff;\n  border-radius: 5px;\n`;\n\nconst CarTitleStyle = styled.div`\n  font-size: 18px;\n  font-weight: 700;\n  color: ${theme.color.primary};\n`;\n\nconst CardTitleSubStyle = styled.div`\n  border-bottom: 1px solid #eee;\n  padding-bottom: 15px;\n  font-size: 12px;\n  margin-top: 5px;\n`;\n\nconst NumberStyle = styled.div`\n  background: ${theme.color.secondary};\n  height: 20px;\n  width: 20px;\n  border-radius: 20px;\n  line-height: 20px;\n  text-align: center;\n  color: #fff;\n  font-weight: 700;\n  font-size: 12px;\n  margin-right: 15px;\n`;\n\nexport {\n  DetailWrap,\n  Heading,\n  DetailContent,\n  CardStyle,\n  CarTitleStyle,\n  CardTitleSubStyle,\n  NumberStyle\n};\n","import React, { useEffect, useState } from 'react';\nimport { find } from 'lodash/fp';\n\nimport Axios from 'axios';\nimport { Icon, Loading, Button, Layout } from '../../components';\nimport icons from '../../assets/icons';\n\nimport {\n  DetailWrap,\n  DetailContent,\n  CardStyle,\n  CarTitleStyle,\n  CardTitleSubStyle,\n  NumberStyle\n} from './style';\nimport theme from '../../configs/theme';\nimport connect from '../../state/connect';\nimport { HeadingScreen, Audio } from '../../components';\n\ntype DetailProps = {\n  match: {\n    params: {\n      w: String\n    }\n  },\n  wordsToday: any,\n  updateStatusWord: Function\n};\n\nconst Detail = ({ match, updateStatusWord, wordsToday }: DetailProps) => {\n  const { params } = match;\n  const [loading, setLoading] = useState(true);\n\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const url = `https://sc5z4.sse.codesandbox.io/word/${params.w}`;\n\n    Axios.get(url).then(res => {\n      setData(res.data);\n      setLoading(false);\n    });\n  }, [params.w]);\n\n  if (loading) return <Loading />;\n\n  const isDone = () => {\n    const word = find(\n      w => w.word === params.w && w.status === true,\n      wordsToday\n    );\n    if (!word) return false;\n    return true;\n  };\n\n  const checkWord = () => {\n    const word = find(w => w.word === params.w, wordsToday);\n    if (!word) {\n      return false;\n    }\n\n    if (word.type && word.type !== 'today') {\n      return false;\n    }\n\n    return true;\n  };\n\n  return (\n    <Layout>\n      <HeadingScreen title=\"\" />\n\n      <DetailWrap>\n        {params.w && (\n          <div\n            style={{\n              textAlign: 'center',\n              fontSize: 40,\n              fontWeight: 700,\n              lineHeight: 1,\n              fontFamily: theme.font.family.secondary,\n              margin: `0 0 ${theme.size.space * 2}px`\n            }}\n          >\n            {params.w}\n          </div>\n        )}\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          <Audio />\n        </div>\n\n        <DetailContent>\n          {data.map(d => {\n            return (\n              <CardStyle key={d.pron}>\n                <CarTitleStyle>{d.title}</CarTitleStyle>\n                <CardTitleSubStyle>\n                  {d.posgram.map(p => (\n                    <span key={p}>{p}</span>\n                  ))}\n\n                  <span style={{ marginLeft: 10 }}>{d.pron}</span>\n                </CardTitleSubStyle>\n                {d.content.map((c, l) => (\n                  <div\n                    key={c.def}\n                    style={{ margin: '15px 0', display: 'flex' }}\n                  >\n                    <NumberStyle>{l + 1}</NumberStyle>\n                    <div style={{ flex: 1 }}>\n                      <div style={{ fontWeight: 700, lineHeight: 1.3 }}>\n                        {c.def}\n                      </div>\n                      <div\n                        style={{\n                          margin: '10px 0',\n                          color: theme.color.primary,\n                          fontWeight: 700\n                        }}\n                      >\n                        {c.trans}\n                      </div>\n                      <div>\n                        <b style={{ margin: '15px 0', display: 'block' }}>\n                          <small>Example:</small>\n                        </b>\n                        {c.examp.map((ex, i) => (\n                          <div style={{ marginBottom: 10 }} key={ex}>\n                            {`${i + 1}. ${ex}`}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </CardStyle>\n            );\n          })}\n\n          {checkWord() && (\n            <Button\n              type=\"primary\"\n              block\n              size=\"large\"\n              onClick={() => updateStatusWord(params.w)}\n            >\n              {isDone() ? <Icon icon={icons.check} color=\"#fff\" /> : 'Done'}\n            </Button>\n          )}\n        </DetailContent>\n      </DetailWrap>\n    </Layout>\n  );\n};\n\nconst select = [\n  {\n    values: ['wordsToday', 'updateStatusWord'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(Detail);\n"],"sourceRoot":""}