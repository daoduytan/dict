{"version":3,"sources":["pages/Homepage/NoWord.js","pages/Homepage/TabDay.js","pages/Homepage/TabWeek.js","pages/Homepage/TabMonth.js","pages/Homepage/Tabs.js","pages/Homepage/Heading.js","pages/Homepage/index.js","pages/Homepage/Word.js","pages/Homepage/style.js"],"names":["memo","style","display","alignItems","justifyContent","padding","textAlign","src","no_word","alt","width","fontSize","fontFamily","theme","font","family","secondary","select","connect","values","context","wordsDay","words_done","filter","w","type","length","map","i","Word","key","word","number","wordsWeek","wordsMonth","TabHeadingStyle","styled","div","active","color","primary","text","BarScroll","TabWrap","TabHeading","title","onClick","rest","TabPanel","children","TabToday","enhance","wordsToday","reload","wordNotDone","find","status","margin","size","block","Tabs","useState","activeTab","setActiveTab","fixed","setFixed","refTab","useRef","handleChangeTab","e","toNumber","target","id","handleScroll","window","scrollY","current","offsetTop","useEffect","addEventListener","removeEventListener","position","top","ref","user","paddingRight","displayName","moment","Date","format","lineHeight","fontWeight","to","firestore","collection","ref1","updateTypeDate","setW","uid","right","bottom","icon","icons","check","newType","doc","where","get","then","snapshot","empty","forEach","update","add","role","WordLine","Link","border","HeadingWrap","space"],"mappings":"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","file":"static/js/4.fd82b106.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nimport { no_word } from '../../assets/images';\nimport theme from '../../configs/theme';\n\nconst NoWord = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '70px 0'\n      }}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <img src={no_word} alt=\"\" style={{ width: 200 }} />\n        <div style={{ fontSize: 18, fontFamily: theme.font.family.secondary }}>\n          No word\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(NoWord);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabDay = ({ words_done }: TabDayProps) => {\n  const wordsDay = words_done.filter(w => w.type === 'day');\n\n  if (wordsDay.length === 0) return <NoWord />;\n\n  return wordsDay.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'day' }} type=\"day\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabDay);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabWeek = ({ words_done }: TabDayProps) => {\n  const wordsWeek = words_done.filter(w => w.type === 'week');\n\n  if (wordsWeek.length === 0) return <NoWord />;\n\n  return wordsWeek.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'week' }} type=\"week\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabWeek);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabMonth = ({ words_done }: TabDayProps) => {\n  const wordsMonth = words_done.filter(w => w.type === 'month');\n\n  if (wordsMonth.length === 0) return <NoWord />;\n\n  return wordsMonth.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'month' }} type=\"month\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabMonth);\n","// @flow\nimport React, { useState, useEffect, useRef } from 'react';\nimport { toNumber, find } from 'lodash/fp';\n\nimport styled from 'styled-components';\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport theme from '../../configs/theme';\n\nimport TabDay from './TabDay';\nimport TabWeek from './TabWeek';\nimport TabMonth from './TabMonth';\nimport { Button } from '../../components';\n\nconst TabHeadingStyle = styled.div`\n  flex: 1;\n  padding: 15px 10px;\n  text-align: center;\n  font-weight: 700;\n  // text-transform: uppercase;\n  position: relative;\n\n  color: ${({ active }) => (active ? theme.color.primary : theme.color.text)};\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n    display: block;\n    height: 2px;\n    background: ${({ active }) => (active ? 'transparent' : 'transparent')};\n  }\n`;\n\nconst BarScroll = styled.div`\n  height: 3px;\n  width: ${({ number }) => `${100 / number}%`};\n  transition: all 0.3s cubic-bezier(0.63, -0.33, 0.37, 1.36);\n  background: ${theme.color.primary};\n  position: absolute;\n  bottom: -1px;\n  z-isndex: 10;\n  transform: ${({ active }) => `translateX(${(active - 1) * 100}%)`};\n`;\n\nconst TabWrap = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  border-bottom: 1px solid #ddd;\n  background: #fff;\n  width: 100%;\n  z-index: 100;\n  transition: all 0.3s cubic-bezier(0.63, -0.33, 0.37, 1.36);\n`;\n\ntype TabHeadingProps = {\n  title: String,\n  onClick: Function,\n  active: Boolean\n};\n\nconst TabHeading = ({ title, onClick, active, ...rest }: TabHeadingProps) => {\n  return (\n    <TabHeadingStyle onClick={onClick} active={active} {...rest}>\n      {title}\n    </TabHeadingStyle>\n  );\n};\n\nconst TabPanel = ({ children }) => children;\n\nconst enhance = connect([\n  {\n    values: ['wordsToday', 'reload'],\n    context: 'wordContext'\n  }\n]);\n\nconst TabToday = enhance(({ wordsToday, reload }) => {\n  const wordNotDone = find(w => w.status === false, wordsToday);\n\n  return (\n    <>\n      {wordsToday.map((w, i) => (\n        <Word\n          key={w.word}\n          word={{ ...w, number: i, type: w.type || 'today' }}\n          type=\"today\"\n        />\n      ))}\n\n      {!wordNotDone && (\n        <div style={{ margin: 30 }}>\n          <Button type=\"primary\" size=\"large\" block onClick={reload}>\n            Load more\n          </Button>\n        </div>\n      )}\n    </>\n  );\n});\n\nconst Tabs = () => {\n  const [activeTab, setActiveTab] = useState(1);\n  const [fixed, setFixed] = useState(false);\n\n  const refTab = useRef();\n\n  const handleChangeTab = e => {\n    setActiveTab(toNumber(e.target.id));\n  };\n\n  const handleScroll = () => {\n    if (window.scrollY >= refTab.current.offsetTop - 52) {\n      return setFixed(true);\n    }\n    return setFixed(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <div>\n      <TabWrap\n        style={{\n          position: fixed ? 'fixed' : 'relative',\n          top: fixed ? '0' : 'auto'\n        }}\n      >\n        <BarScroll active={activeTab} number={4} />\n\n        <TabHeading\n          title=\"Today\"\n          onClick={handleChangeTab}\n          id={1}\n          active={activeTab === 1}\n        />\n        <TabHeading\n          title=\"Day\"\n          onClick={handleChangeTab}\n          id={2}\n          active={activeTab === 2}\n        />\n        <TabHeading\n          title=\"Week\"\n          onClick={handleChangeTab}\n          id={3}\n          active={activeTab === 3}\n        />\n        <TabHeading\n          title=\"Month\"\n          onClick={handleChangeTab}\n          id={4}\n          active={activeTab === 4}\n        />\n      </TabWrap>\n\n      <div ref={refTab}>\n        {activeTab === 1 && (\n          <TabPanel>\n            <TabToday />\n          </TabPanel>\n        )}\n\n        {activeTab === 2 && (\n          <TabPanel>\n            <TabDay />\n          </TabPanel>\n        )}\n\n        {activeTab === 3 && (\n          <TabPanel>\n            <TabWeek />\n          </TabPanel>\n        )}\n\n        {activeTab === 4 && (\n          <TabPanel>\n            <TabMonth />\n          </TabPanel>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tabs;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nimport connect from '../../state/connect';\nimport { Avatar } from '../../components';\nimport { HeadingWrap } from './style';\nimport theme from '../../configs/theme';\n\ntype HeadingProps = { user: any };\n\nconst Heading = ({ user }: HeadingProps) => {\n  return (\n    <>\n      <HeadingWrap>\n        <div style={{ paddingRight: 30 }}>\n          <h2\n            style={{\n              margin: '5px 0 0',\n              fontSize: 30,\n              fontFamily: theme.font.family.secondary\n            }}\n          >\n            Hi, {user.displayName}\n          </h2>\n          <small style={{ color: theme.color.primary }}>\n            Date: {moment(new Date()).format('DD-MM-YYYY')}\n          </small>\n          <p style={{ lineHeight: 1.5, fontSize: 17, fontWeight: 600 }}>\n            10 vocabulary for today\n          </p>\n        </div>\n\n        <Link to=\"/profile\">\n          <Avatar />\n        </Link>\n      </HeadingWrap>\n    </>\n  );\n};\n\nconst select = [{ values: ['user'], context: 'authContext' }];\n\nexport default connect(select)(Heading);\n","// @flow\nimport React, { memo } from 'react';\n\nimport Tabs from './Tabs';\nimport Heading from './Heading';\n\nconst Homepage = () => {\n  return (\n    <>\n      <Heading />\n      <Tabs />\n    </>\n  );\n};\n\nexport default memo(Homepage);\n","import React, { useState } from 'react';\n\nimport { Icon } from '../../components';\nimport icons from '../../assets/icons';\nimport { firestore } from '../../api';\nimport theme from '../../configs/theme';\nimport { WordLine } from './style';\nimport connect from '../../state/connect';\n\nconst ref = firestore.collection('user');\nconst ref1 = firestore.collection('words_done');\n\ntype WordProps = {\n  word: {\n    word: String,\n    status: String,\n    number: Number,\n    id: String\n  },\n  user: {\n    uid: String\n  },\n  type: String,\n  updateTypeDate: Function\n};\n\nconst Word = ({ word, type, user, updateTypeDate }: WordProps) => {\n  const [w, setW] = useState(word);\n\n  const { uid } = user;\n\n  const handleChangeType = () => {\n    const newType = () => {\n      if (type === 'today') {\n        return 'day';\n      }\n      if (type === 'day') {\n        return 'week';\n      }\n      if (type === 'week') {\n        return 'month';\n      }\n\n      return 'day';\n    };\n\n    ref\n      .doc(uid)\n      .collection('word_today')\n      .where('word', '==', w.word)\n      .get()\n      .then(snapshot => {\n        if (snapshot.empty) {\n          return null;\n        }\n\n        return snapshot.forEach(doc => {\n          ref\n            .doc(uid)\n            .collection('word_today')\n            .doc(doc.id)\n            .update({\n              type: newType()\n            });\n        });\n      });\n\n    setW({ ...w, type: newType() });\n\n    updateTypeDate({ ...w, type: newType() });\n\n    if (type === 'today') {\n      ref1.add({ ...word, uid, type: newType() });\n    } else {\n      ref1\n\n        .where('uid', '==', user.uid)\n        .get()\n        .then(snapshot => {\n          if (snapshot.empty) {\n            return null;\n          }\n\n          return snapshot.forEach(doc => {\n            ref1.doc(doc.id).update({\n              type: newType()\n            });\n          });\n        });\n    }\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <WordLine\n        to={`/word/${w.word}`}\n        key={w.word}\n        style={{\n          color: w.status ? theme.color.primary : theme.color.text\n        }}\n      >\n        <span>{w.number + 1}.</span>\n        {w.word}\n      </WordLine>\n\n      {w.status && w.type !== type && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <Icon icon={icons.check} size={20} color={theme.color.secondary} />\n        </div>\n      )}\n\n      {w.status && w.type === type && w.type !== 'month' && (\n        <div\n          onClick={handleChangeType}\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n          role=\"presentation\"\n        >\n          <Icon icon={icons.right} size={20} color={theme.color.primary} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst select = [\n  { values: ['user'], context: 'authContext' },\n  {\n    values: ['updateTypeDate'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(Word);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport theme from '../../configs/theme';\n\nconst WordLine = styled(Link)`\n  height: 70px;\n  display: flex;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n  padding: 15px;\n  border-bottom: 1px solid ${theme.color.border};\n  font-family: ${theme.font.family.secondary};\n\n  span {\n    text-align: center;\n    display: inline-block;\n    width: 50px;\n    margin-right: 30px;\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst HeadingWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${theme.size.space * 2}px ${theme.size.space * 2}px\n    ${theme.size.space}px ${theme.size.space * 2}px;\n`;\n\nconst Button = styled.div`\n  border: 1px solid ${theme.color.border};\n  height: 40px;\n  padding: 0 15px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: #fff;\n`;\n\nexport { WordLine, HeadingWrap, Button };\n"],"sourceRoot":""}