{"version":3,"sources":["pages/Homepage/Word.js","pages/Homepage/NoWord.js","pages/Homepage/style.js","assets/notfound.jpg","pages/Homepage/TabDay.js","pages/Homepage/TabWeek.js","pages/Homepage/TabMonth.js","pages/Homepage/TabNotFound.js","pages/Homepage/Tabs.js","pages/Homepage/Heading.js","pages/Homepage/index.js"],"names":["ref","firestore","collection","ref1","connect","values","context","word","type","user","updateTypeDate","useState","w","setW","uid","style","position","to","key","color","status","theme","primary","text","number","top","right","bottom","padding","display","alignItems","icon","icons","check","size","secondary","onClick","newType","doc","where","get","then","snapshot","empty","forEach","id","update","add","role","memo","justifyContent","textAlign","src","no_word","alt","width","fontSize","fontWeight","marginTop","space","fontFamily","font","family","WordLine","styled","Link","border","HeadingWrap","div","module","exports","select","wordsDay","words_done","filter","length","NoWord","map","i","Word","wordsWeek","wordsMonth","TabNotFound","height","notfound","TabHeadingStyle","active","BarScroll","TabWrap","TabHeading","title","rest","TabPanel","children","TabToday","enhance","wordsToday","reload","wordNotDone","find","margin","block","tabs","component","TabDay","TabWeek","TabMonth","withRouter","match","history","params","activeTab","setActiveTab","fixed","setFixed","refTab","useRef","handleChangeTab","e","push","target","handleScroll","window","scrollY","current","offsetTop","useEffect","addEventListener","removeEventListener","tabExist","t","getNumberActive","className","paddingRight","displayName","moment","Date","format","lineHeight","background","minHeight"],"mappings":"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","file":"static/js/3.742900c5.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { Icon } from '../../components';\nimport icons from '../../assets/icons';\nimport { firestore } from '../../api';\nimport theme from '../../configs/theme';\nimport { WordLine } from './style';\nimport connect from '../../state/connect';\n\nconst ref = firestore.collection('user');\nconst ref1 = firestore.collection('words_done');\n\ntype WordProps = {\n  word: {\n    word: String,\n    status: String,\n    number: Number,\n    id: String\n  },\n  user: {\n    uid: String\n  },\n  type: String,\n  updateTypeDate: Function\n};\n\nconst Word = ({ word, type, user, updateTypeDate }: WordProps) => {\n  const [w, setW] = useState(word);\n\n  const { uid } = user;\n\n  const handleChangeType = () => {\n    const newType = () => {\n      if (type === 'today') {\n        return 'day';\n      }\n      if (type === 'day') {\n        return 'week';\n      }\n      if (type === 'week') {\n        return 'month';\n      }\n\n      return 'day';\n    };\n\n    ref\n      .doc(uid)\n      .collection('word_today')\n      .where('word', '==', w.word)\n      .get()\n      .then(snapshot => {\n        if (snapshot.empty) {\n          return null;\n        }\n\n        return snapshot.forEach(doc => {\n          ref\n            .doc(uid)\n            .collection('word_today')\n            .doc(doc.id)\n            .update({\n              type: newType()\n            });\n        });\n      });\n\n    setW({ ...w, type: newType() });\n\n    updateTypeDate({ ...w, type: newType() });\n\n    if (type === 'today') {\n      ref1.add({ ...word, uid, type: newType() });\n    } else {\n      ref1\n\n        .where('uid', '==', user.uid)\n        .get()\n        .then(snapshot => {\n          if (snapshot.empty) {\n            return null;\n          }\n\n          return snapshot.forEach(doc => {\n            ref1.doc(doc.id).update({\n              type: newType()\n            });\n          });\n        });\n    }\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <WordLine\n        to={`/word/${w.word}`}\n        key={w.word}\n        style={{\n          color: w.status ? theme.color.primary : theme.color.text\n        }}\n      >\n        <span>{w.number + 1}.</span>\n        {w.word}\n      </WordLine>\n\n      {w.status && w.type !== type && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <Icon icon={icons.check} size={20} color={theme.color.secondary} />\n        </div>\n      )}\n\n      {w.status && w.type === type && w.type !== 'month' && (\n        <div\n          onClick={handleChangeType}\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n          role=\"presentation\"\n        >\n          <Icon icon={icons.right} size={20} color={theme.color.primary} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst select = [\n  { values: ['user'], context: 'authContext' },\n  {\n    values: ['updateTypeDate'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(Word);\n","import React, { memo } from 'react';\n\nimport { no_word } from '../../assets/images';\nimport theme from '../../configs/theme';\n\nconst NoWord = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '70px 0'\n      }}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <img src={no_word} alt=\"\" style={{ width: 150 }} />\n        <div\n          style={{\n            fontSize: 25,\n            fontWeight: 600,\n            marginTop: theme.size.space * 1.5,\n            fontFamily: theme.font.family.secondary\n          }}\n        >\n          No word\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(NoWord);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport theme from '../../configs/theme';\n\nconst WordLine = styled(Link)`\n  height: 70px;\n  display: flex;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n  padding: 15px;\n  border-bottom: 1px solid ${theme.color.border};\n  font-family: ${theme.font.family.secondary};\n\n  span {\n    text-align: center;\n    display: inline-block;\n    width: 50px;\n    margin-right: 30px;\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst HeadingWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #fff;\n  padding: ${theme.size.space * 2}px ${theme.size.space * 2}px\n    ${theme.size.space}px ${theme.size.space * 2}px;\n`;\n\nconst Button = styled.div`\n  border: 1px solid ${theme.color.border};\n  height: 40px;\n  padding: 0 15px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: #fff;\n`;\n\nexport { WordLine, HeadingWrap, Button };\n","module.exports = __webpack_public_path__ + \"static/media/notfound.ccdb678f.jpg\";","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabDay = ({ words_done }: TabDayProps) => {\n  const wordsDay = words_done.filter(w => w.type === 'day');\n\n  if (wordsDay.length === 0) return <NoWord />;\n\n  return wordsDay.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'day' }} type=\"day\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabDay);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabWeek = ({ words_done }: TabDayProps) => {\n  const wordsWeek = words_done.filter(w => w.type === 'week');\n\n  if (wordsWeek.length === 0) return <NoWord />;\n\n  return wordsWeek.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'week' }} type=\"week\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabWeek);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabMonth = ({ words_done }: TabDayProps) => {\n  const wordsMonth = words_done.filter(w => w.type === 'month');\n\n  if (wordsMonth.length === 0) return <NoWord />;\n\n  return wordsMonth.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'month' }} type=\"month\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabMonth);\n","import React from 'react';\nimport notfound from '../../assets/notfound.jpg';\n\nconst TabNotFound = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: 'calc(100vh - 178px - 55px - 60px)'\n      }}\n    >\n      <img src={notfound} alt=\"\" style={{ display: 'block', width: '80%' }} />\n    </div>\n  );\n};\n\nexport default TabNotFound;\n","// @flow\nimport React, { useState, useEffect, useRef } from 'react';\nimport { find } from 'lodash/fp';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport theme from '../../configs/theme';\n\nimport TabDay from './TabDay';\nimport TabWeek from './TabWeek';\nimport TabMonth from './TabMonth';\nimport { Button } from '../../components';\nimport TabNotFound from './TabNotFound';\n\nconst TabHeadingStyle = styled.div`\n  flex: 1;\n  padding: 15px 10px;\n  text-align: center;\n  font-weight: 700;\n  // text-transform: uppercase;\n  position: relative;\n\n  color: ${({ active }) => (active ? theme.color.primary : theme.color.text)};\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n    display: block;\n    height: 2px;\n    background: ${({ active }) => (active ? 'transparent' : 'transparent')};\n  }\n`;\n\nconst BarScroll = styled.div`\n  height: 3px;\n  width: ${({ number }) => `${100 / number}%`};\n  transition: all 0.3s cubic-bezier(0.63, -0.33, 0.37, 1.36);\n  background: ${theme.color.primary};\n  position: absolute;\n  bottom: -1px;\n  z-isndex: 10;\n  transform: ${({ active }) => `translateX(${(active - 1) * 100}%)`};\n`;\n\nconst TabWrap = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  border-bottom: 1px solid #ddd;\n  background: #fff;\n  width: 100%;\n  z-index: 100;\n  transition: all 0.3s cubic-bezier(0.63, -0.33, 0.37, 1.36);\n`;\n\ntype TabHeadingProps = {\n  title: String,\n  onClick: Function,\n  active: Boolean\n};\n\nconst TabHeading = ({ title, onClick, active, ...rest }: TabHeadingProps) => {\n  return (\n    <TabHeadingStyle onClick={onClick} active={active} {...rest}>\n      {title}\n    </TabHeadingStyle>\n  );\n};\n\nconst TabPanel = ({ children }) => children;\n\nconst enhance = connect([\n  {\n    values: ['wordsToday', 'reload'],\n    context: 'wordContext'\n  }\n]);\n\nconst TabToday = enhance(({ wordsToday, reload }) => {\n  const wordNotDone = find(w => w.status === false, wordsToday);\n\n  return (\n    <>\n      {wordsToday.map((w, i) => (\n        <Word\n          key={w.word}\n          word={{ ...w, number: i, type: w.type || 'today' }}\n          type=\"today\"\n        />\n      ))}\n\n      {!wordNotDone && (\n        <div style={{ margin: 30 }}>\n          <Button type=\"primary\" size=\"large\" block onClick={reload}>\n            Load more\n          </Button>\n        </div>\n      )}\n    </>\n  );\n});\n\nconst tabs = [\n  {\n    number: 1,\n    id: 'today',\n    component: TabToday\n  },\n  {\n    number: 2,\n    id: 'day',\n    component: TabDay\n  },\n\n  {\n    number: 3,\n    id: 'week',\n    component: TabWeek\n  },\n  {\n    number: 4,\n    id: 'month',\n    component: TabMonth\n  }\n];\n\nconst getNumberActive = params => {\n  if (!params) return tabs[0].number;\n\n  const tabExist = find(t => t.id === params, tabs);\n\n  if (!tabExist) return null;\n\n  return tabExist.number;\n};\n\nconst Tabs = ({ match, history }) => {\n  const { params } = match;\n\n  const [activeTab, setActiveTab] = useState(params.params || 'today');\n  const [fixed, setFixed] = useState(false);\n\n  const refTab = useRef();\n\n  const handleChangeTab = e => {\n    history.push(`/main/${e.target.id}`);\n    setActiveTab(e.target.id);\n  };\n\n  const handleScroll = () => {\n    if (window.scrollY >= refTab.current.offsetTop - 52) {\n      return setFixed(true);\n    }\n    return setFixed(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const active = getNumberActive(params.params);\n\n  return (\n    <div>\n      <TabWrap\n        style={{\n          position: fixed ? 'fixed' : 'relative',\n          top: fixed ? '0' : 'auto'\n        }}\n      >\n        <BarScroll active={active} number={4} />\n\n        <TabHeading\n          title=\"Today\"\n          onClick={handleChangeTab}\n          id=\"today\"\n          active={activeTab === 'today'}\n        />\n        <TabHeading\n          title=\"Day\"\n          onClick={handleChangeTab}\n          id=\"day\"\n          active={activeTab === 'day'}\n        />\n        <TabHeading\n          title=\"Week\"\n          onClick={handleChangeTab}\n          id=\"week\"\n          active={activeTab === 'week'}\n        />\n        <TabHeading\n          title=\"Month\"\n          onClick={handleChangeTab}\n          id=\"month\"\n          active={activeTab === 'month'}\n        />\n      </TabWrap>\n\n      <div ref={refTab}>\n        {activeTab === 'today' && (\n          <TabPanel className=\"tab\">\n            <TabToday />\n          </TabPanel>\n        )}\n\n        {activeTab === 'day' && (\n          <TabPanel className=\"tab\">\n            <TabDay />\n          </TabPanel>\n        )}\n\n        {activeTab === 'week' && (\n          <TabPanel className=\"tab\">\n            <TabWeek />\n          </TabPanel>\n        )}\n\n        {activeTab === 'month' && (\n          <TabPanel className=\"tab\">\n            <TabMonth />\n          </TabPanel>\n        )}\n\n        {!active && (\n          <TabPanel className=\"tab\">\n            <TabNotFound />\n          </TabPanel>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Tabs);\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nimport connect from '../../state/connect';\nimport { Avatar } from '../../components';\nimport { HeadingWrap } from './style';\nimport theme from '../../configs/theme';\n\ntype HeadingProps = { user: any };\n\nconst Heading = ({ user }: HeadingProps) => {\n  return (\n    <>\n      <HeadingWrap>\n        <div style={{ paddingRight: 30 }}>\n          <h2\n            style={{\n              margin: '5px 0 0',\n              fontSize: 30,\n              fontFamily: theme.font.family.secondary\n            }}\n          >\n            Hi, {user.displayName}\n          </h2>\n          <small style={{ color: theme.color.primary }}>\n            Date: {moment(new Date()).format('DD-MM-YYYY')}\n          </small>\n          <p style={{ lineHeight: 1.5, fontSize: 17, fontWeight: 600 }}>\n            10 vocabulary for today\n          </p>\n        </div>\n\n        <Link to=\"/profile\">\n          <Avatar />\n        </Link>\n      </HeadingWrap>\n    </>\n  );\n};\n\nconst select = [{ values: ['user'], context: 'authContext' }];\n\nexport default connect(select)(Heading);\n","// @flow\nimport React, { memo } from 'react';\n\nimport { Layout } from '../../components';\nimport Tabs from './Tabs';\nimport Heading from './Heading';\n\nconst Homepage = () => {\n  return (\n    <Layout>\n      <div style={{ background: '#f5f7f9', minHeight: 'calc(100vh - 60px)' }}>\n        <Heading />\n        <Tabs />\n      </div>\n    </Layout>\n  );\n};\n\nexport default memo(Homepage);\n"],"sourceRoot":""}