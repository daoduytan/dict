{"version":3,"sources":["state/rootContext.js","state/connect.js","pages/Homepage/style.js","pages/Homepage/FormChangeNumber.js","pages/Homepage/Word.js","pages/Homepage/Tabs.js","pages/Homepage/index.js"],"names":["context","authContext","wordContext","connect","select","Component","props","newProps","forEach","s","values","state","useContext","rootContext","element","Object","objectSpread","defineProperty","flatProps","react_default","a","createElement","WordLine","styled","Link","_templateObject","theme","color","border","font","family","secondary","Heading","div","_templateObject2","Button","_templateObject3","FormChangeNumber","_useContext","numberWord","handleChangeNumber","_useState","useState","_useState2","slicedToArray","number","setNumber","onSubmit","e","preventDefault","style","fontSize","fontWeight","fontFamily","components","block","size","value","onChange","target","type","marginBottom","space","htmlType","ref","firestore","collection","ref1","_ref","word","user","updateTypeDate","w","setW","uid","console","log","position","to","concat","key","textDecoration","status","primary","text","top","right","bottom","padding","display","alignItems","icon","icons","check","onClick","newType","doc","where","get","then","snapshot","empty","id","update","add","role","TabHeadingStyle","Tabs_templateObject","active","_ref2","TabHeading","_ref3","title","rest","objectWithoutProperties","assign","TabPanel","_ref4","children","TabToday","_ref5","wordsToday","map","i","Homepage_Word","TabDay","TabWeek","TabMonth","Tabs","activeTab","setActiveTab","handleChangeTab","toNumber","gridTemplateColumns","borderBottom","background","Tabs_TabHeading","Tabs_TabDay","Tabs_TabWeek","Tabs_TabMonth","memo","reload","label","setting","Homepage_FormChangeNumber","marginLeft","Homepage_Tabs"],"mappings":"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","file":"static/js/6.b940e779.chunk.js","sourcesContent":["import wordContext from './wordContext';\nimport authContext from './authContext';\n\nconst context = {\n  authContext,\n  wordContext\n};\n\nexport default context;\n","// @flow\nimport { forEach } from 'lodash/fp';\nimport React, { useContext } from 'react';\nimport rootContext from './rootContext';\n\nconst connect = select => Component => props => {\n  let newProps = {};\n\n  forEach(s => {\n    if (s.context) {\n      const { values, context } = s;\n\n      const state = useContext(rootContext[context]);\n      values.forEach(element => {\n        newProps = { ...newProps, [element]: state[element] };\n      });\n    }\n  }, select);\n\n  const flatProps = { ...props, ...newProps };\n\n  return <Component {...flatProps} />;\n};\n\nexport default connect;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport theme from '../../configs/theme';\n\nconst WordLine = styled(Link)`\n  height: 70px;\n  display: flex;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n  padding: 15px;\n  border-bottom: 1px solid ${theme.color.border};\n  font-family: ${theme.font.family.secondary};\n\n  span {\n    text-align: center;\n    display: inline-block;\n    width: 50px;\n    margin-right: 30px;\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst Heading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 20px 0px;\n  background: #fff;\n`;\n\nconst Button = styled.div`\n  border: 1px solid ${theme.color.border};\n  height: 40px;\n  padding: 0 15px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: #fff;\n`;\n\nexport { WordLine, Heading, Button };\n","import React, { useContext, useState } from 'react';\nimport { Input, Button } from '../../components';\nimport theme from '../../configs/theme';\n\nimport wordContext from '../../state/wordContext';\n\nconst FormChangeNumber = () => {\n  const { numberWord, handleChangeNumber } = useContext(wordContext || 9);\n  const [number, setNumber] = useState(numberWord);\n\n  const onChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    handleChangeNumber(number);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <p\n        style={{\n          fontSize: 20,\n          fontWeight: 700,\n          fontFamily: theme.font.family.secondary\n        }}\n      >\n        Change number word\n      </p>\n      <Input\n        block\n        size=\"large\"\n        value={number}\n        onChange={onChange}\n        type=\"number\"\n      />\n      <div style={{ marginBottom: theme.size.space }} />\n      <Button block size=\"large\" type=\"primary\" htmlType=\"submit\">\n        Change now\n      </Button>\n    </form>\n  );\n};\n\nexport default FormChangeNumber;\n","import React, { memo, useState } from 'react';\n\nimport { Icon } from '../../components';\nimport icons from '../../assets/icons';\nimport { firestore } from '../../api';\nimport theme from '../../configs/theme';\nimport { WordLine } from './style';\nimport connect from '../../state/connect';\n\nconst ref = firestore.collection('user');\nconst ref1 = firestore.collection('words_done');\n\ntype WordProps = {\n  word: {\n    word: String,\n    status: String,\n    number: Number,\n    id: String\n  },\n  user: {\n    uid: String\n  },\n  type: String\n};\n\nconst Word = ({ word, type, user, updateTypeDate }: WordProps) => {\n  const [w, setW] = useState(word);\n\n  const { uid } = user;\n\n  console.log('user', uid);\n\n  const handleChangeType = () => {\n    const newType = () => {\n      if (word === 'today') {\n        return 'day';\n      }\n      if (type === 'day') {\n        return 'week';\n      }\n      if (type === 'week') {\n        return 'month';\n      }\n\n      return 'day';\n    };\n\n    ref\n      .doc(uid)\n      .collection('word_today')\n      .where('word', '==', w.word)\n      .get()\n      .then(snapshot => {\n        if (snapshot.empty) {\n          return null;\n        }\n\n        snapshot.forEach(doc => {\n          ref\n            .doc(uid)\n            .collection('word_today')\n            .doc(doc.id)\n            .update({\n              type: newType()\n            });\n        });\n      });\n\n    setW({ ...w, type: newType() });\n\n    updateTypeDate({ ...w, type: newType() });\n\n    ref1.add({ ...word, uid, type: newType() });\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <WordLine\n        to={`/word/${w.word}`}\n        key={w.word}\n        style={{\n          textDecoration: w.status ? 'line-through' : 'none',\n          color: w.status ? theme.color.primary : theme.color.text\n        }}\n      >\n        <span>{w.number + 1}.</span>\n        {w.word}\n      </WordLine>\n\n      {w.status && w.type !== type && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <Icon icon={icons.check} size={20} color={theme.color.secondary} />\n        </div>\n      )}\n\n      {w.status && w.type === type && (\n        <div\n          onClick={handleChangeType}\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n          role=\"presentation\"\n        >\n          <Icon icon={icons.right} size={20} color={theme.color.primary} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst select = [\n  { values: ['user'], context: 'authContext' },\n  {\n    values: ['updateTypeDate'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(Word);\n","import React, { useState } from 'react';\nimport { toNumber } from 'lodash/fp';\n\nimport styled from 'styled-components';\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport theme from '../../configs/theme';\n\nconst TabHeadingStyle = styled.div`\n  flex: 1;\n  padding: 15px 10px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  position: relative;\n\n  color: ${({ active }) => (active ? theme.color.primary : theme.color.text)};\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n    display: block;\n    height: 2px;\n    background: ${({ active }) =>\n      active ? theme.color.primary : 'transparent'};\n  }\n`;\n\nconst TabHeading = ({ title, onClick, active, ...rest }) => {\n  return (\n    <TabHeadingStyle onClick={onClick} active={active} {...rest}>\n      {title}\n    </TabHeadingStyle>\n  );\n};\n\nconst TabPanel = ({ children }) => children;\n\nconst select = [\n  {\n    values: ['wordsToday'],\n    context: 'wordContext'\n  }\n];\n\nconst TabToday = connect(select)(({ wordsToday }) =>\n  wordsToday.map((w, i) => (\n    <Word\n      key={w.word}\n      word={{ ...w, number: i, type: w.type || 'today' }}\n      type=\"today\"\n    />\n  ))\n);\n\nconst TabDay = () => {\n  return <div>TabDay</div>;\n};\nconst TabWeek = () => <div>TabWeek</div>;\n\nconst TabMonth = () => <div>TabMonth</div>;\n\nconst Tabs = () => {\n  const [activeTab, setActiveTab] = useState(1);\n\n  const handleChangeTab = e => {\n    setActiveTab(toNumber(e.target.id));\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(4, 1fr)',\n          borderBottom: '1px solid #eee',\n          background: '#fff'\n        }}\n      >\n        <TabHeading\n          title=\"Today\"\n          onClick={handleChangeTab}\n          id={1}\n          active={activeTab === 1}\n        />\n        <TabHeading\n          title=\"Day\"\n          onClick={handleChangeTab}\n          id={2}\n          active={activeTab === 2}\n        />\n        <TabHeading\n          title=\"Week\"\n          onClick={handleChangeTab}\n          id={3}\n          active={activeTab === 3}\n        />\n        <TabHeading\n          title=\"Month\"\n          onClick={handleChangeTab}\n          id={4}\n          active={activeTab === 4}\n        />\n      </div>\n\n      <div>\n        {activeTab === 1 && (\n          <TabPanel>\n            <TabToday />\n          </TabPanel>\n        )}\n\n        {activeTab === 2 && (\n          <TabPanel>\n            <TabDay />\n          </TabPanel>\n        )}\n\n        {activeTab === 3 && (\n          <TabPanel>\n            <TabWeek />\n          </TabPanel>\n        )}\n\n        {activeTab === 4 && (\n          <TabPanel>\n            <TabMonth />\n          </TabPanel>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tabs;\n","// @flow\nimport React, { memo } from 'react';\n\nimport { Icon, Modal, Button } from '../../components';\n\nimport connect from '../../state/connect';\n\nimport { Heading, Button as ButtonHome } from './style';\nimport icons from '../../assets/icons';\nimport FormChangeNumber from './FormChangeNumber';\nimport theme from '../../configs/theme';\n\nimport Tabs from './Tabs';\n\ntype Props = {\n  reload: Function\n};\n\nconst Homepage = ({ reload }: Props) => {\n  return (\n    <div style={{ padding: 0 }}>\n      <Heading>\n        <h2\n          style={{\n            fontSize: 20,\n            fontWeight: 300\n          }}\n        >\n          Words\n        </h2>\n        <div style={{ display: 'flex' }}>\n          <Modal\n            label={\n              <ButtonHome>\n                <Icon icon={icons.setting} size={15} />{' '}\n              </ButtonHome>\n            }\n          >\n            <FormChangeNumber />\n          </Modal>\n\n          <div style={{ marginLeft: 10 }} />\n\n          <Modal\n            label={\n              <ButtonHome>\n                <Icon icon={icons.reload} size={15} />\n              </ButtonHome>\n            }\n          >\n            <p\n              style={{\n                fontSize: 20,\n                fontWeight: 700,\n                fontFamily: theme.font.family.secondary\n              }}\n            >\n              Are you sure reload list words?\n            </p>\n            <Button\n              type=\"primary\"\n              onClick={reload}\n              block\n              role=\"presentation\"\n              size=\"large\"\n            >\n              Reload\n            </Button>\n          </Modal>\n        </div>\n      </Heading>\n\n      <Tabs />\n    </div>\n  );\n};\n\nconst select = [\n  {\n    values: ['wordsToday', 'reload', 'updateStatusWord'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(memo(Homepage));\n"],"sourceRoot":""}