{"version":3,"sources":["state/rootContext.js","state/connect.js","pages/Homepage/style.js","pages/Homepage/FormChangeNumber.js","pages/Homepage/index.js"],"names":["context","authContext","wordContext","connect","select","Component","props","newProps","forEach","s","values","state","useContext","rootContext","element","Object","objectSpread","defineProperty","flatProps","react_default","a","createElement","WordLine","styled","div","_templateObject","theme","color","border","font","family","secondary","Heading","_templateObject2","Button","_templateObject3","FormChangeNumber","_useContext","numberWord","handleChangeNumber","_useState","useState","_useState2","slicedToArray","number","setNumber","onSubmit","e","preventDefault","style","fontSize","fontWeight","fontFamily","components","block","size","value","onChange","target","type","marginBottom","space","htmlType","memo","_ref","wordsToday","reload","updateStatusWord","padding","display","label","icon","icons","setting","Homepage_FormChangeNumber","marginLeft","onClick","role","map","w","i","key","word","textDecoration","status"],"mappings":"+IAQeA,EALC,CACdC,oBACAC,iBCmBaC,IAnBC,SAAAC,GAAM,OAAI,SAAAC,GAAS,OAAI,SAAAC,GACrC,IAAIC,EAAW,GAEfC,kBAAQ,SAAAC,GACN,GAAIA,EAAET,QAAS,KACLU,EAAoBD,EAApBC,OAAQV,EAAYS,EAAZT,QAEVW,EAAQC,qBAAWC,EAAYb,IACrCU,EAAOF,QAAQ,SAAAM,GACbP,EAAQQ,OAAAC,EAAA,EAAAD,CAAA,GAAQR,EAARQ,OAAAE,EAAA,EAAAF,CAAA,GAAmBD,EAAUH,EAAMG,SAG9CV,GAEH,IAAMc,EAASH,OAAAC,EAAA,EAAAD,CAAA,GAAQT,EAAUC,GAEjC,OAAOY,EAAAC,EAAAC,cAAChB,EAAca,09BCjBxB,IAAMI,EAAWC,IAAOC,IAAVC,IAOeC,IAAMC,MAAMC,OACxBF,IAAMG,KAAKC,OAAOC,WAW7BC,EAAUT,IAAOC,IAAVS,IAKgBP,IAAMC,MAAMC,QAInCM,EAASX,IAAOC,IAAVW,IACUT,IAAMC,MAAMC,gCCYnBQ,EAvCU,WAAM,IAAAC,EACczB,qBAAWV,KAAe,GAA7DoC,EADqBD,EACrBC,WAAYC,EADSF,EACTE,mBADSC,EAEDC,mBAASH,GAFRI,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAyB,EAAA,GAEtBI,EAFsBF,EAAA,GAEdG,EAFcH,EAAA,GAa7B,OACEvB,EAAAC,EAAAC,cAAA,QAAMyB,SANS,SAAAC,GACfA,EAAEC,iBACFT,EAAmBK,KAKjBzB,EAAAC,EAAAC,cAAA,KACE4B,MAAO,CACLC,SAAU,GACVC,WAAY,IACZC,WAAY1B,IAAMG,KAAKC,OAAOC,YAJlC,sBASAZ,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,QACLC,MAAOZ,EACPa,SAxBW,SAAAV,GACfF,EAAUE,EAAEW,OAAOF,QAwBfG,KAAK,WAEPxC,EAAAC,EAAAC,cAAA,OAAK4B,MAAO,CAAEW,aAAclC,IAAM6B,KAAKM,SACvC1C,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQC,OAAK,EAACC,KAAK,QAAQI,KAAK,UAAUG,SAAS,UAAnD,gBCsDS3D,sBAPA,CACb,CACEO,OAAQ,CAAC,aAAc,SAAU,oBACjCV,QAAS,gBAIEG,CAAgB4D,eA3Ed,SAAAC,GAAqD,IAAlDC,EAAkDD,EAAlDC,WAAYC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,iBACtC,OACEhD,EAAAC,EAAAC,cAAA,OAAK4B,MAAO,CAAEmB,QAAS,IACrBjD,EAAAC,EAAAC,cAACW,EAAD,KACEb,EAAAC,EAAAC,cAAA,MACE4B,MAAO,CACLC,SAAU,GACVC,WAAY,MAHhB,SAQAhC,EAAAC,EAAAC,cAAA,OAAK4B,MAAO,CAAEoB,QAAS,SACrBlD,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEiB,MACEnD,EAAAC,EAAAC,cAACa,EAAD,KACEf,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMkB,KAAMC,IAAMC,QAASlB,KAAM,KAAO,MAI5CpC,EAAAC,EAAAC,cAACqD,EAAD,OAGFvD,EAAAC,EAAAC,cAAA,OAAK4B,MAAO,CAAE0B,WAAY,MAE1BxD,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEiB,MACEnD,EAAAC,EAAAC,cAACa,EAAD,KACEf,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMkB,KAAMC,IAAMN,OAAQX,KAAM,OAIpCpC,EAAAC,EAAAC,cAAA,KACE4B,MAAO,CACLC,SAAU,GACVC,WAAY,IACZC,WAAY1B,IAAMG,KAAKC,OAAOC,YAJlC,mCASAZ,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEM,KAAK,UACLiB,QAASV,EACTZ,OAAK,EACLuB,KAAK,eACLtB,KAAK,SALP,aAaLU,EAAWa,IAAI,SAACC,EAAGC,GAAJ,OACd7D,EAAAC,EAAAC,cAACC,EAAD,CACEsD,QAAS,kBAAMT,EAAiBY,IAChCE,IAAKF,EAAEG,KACPjC,MAAO,CAAEkC,eAAgBJ,EAAEK,OAAS,eAAiB,SAErDjE,EAAAC,EAAAC,cAAA,YAAO2D,EAAI,EAAX,KACCD,EAAEG","file":"static/js/6.c4a0d61e.chunk.js","sourcesContent":["import wordContext from './wordContext';\nimport authContext from './authContext';\n\nconst context = {\n  authContext,\n  wordContext\n};\n\nexport default context;\n","// @flow\nimport { forEach } from 'lodash/fp';\nimport React, { useContext } from 'react';\nimport rootContext from './rootContext';\n\nconst connect = select => Component => props => {\n  let newProps = {};\n\n  forEach(s => {\n    if (s.context) {\n      const { values, context } = s;\n\n      const state = useContext(rootContext[context]);\n      values.forEach(element => {\n        newProps = { ...newProps, [element]: state[element] };\n      });\n    }\n  }, select);\n\n  const flatProps = { ...props, ...newProps };\n\n  return <Component {...flatProps} />;\n};\n\nexport default connect;\n","import styled from 'styled-components';\n\nimport theme from '../../configs/theme';\n\nconst WordLine = styled.div`\n  height: 70px;\n  display: flex;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n  padding: 15px;\n  border-bottom: 1px solid ${theme.color.border};\n  font-family: ${theme.font.family.secondary};\n\n  span {\n    text-align: center;\n    display: inline-block;\n    width: 50px;\n    margin-right: 30px;\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst Heading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  border-bottom: 1px solid ${theme.color.border};\n  background: #f9f9f9;\n`;\n\nconst Button = styled.div`\n  border: 1px solid ${theme.color.border};\n  height: 40px;\n  padding: 0 15px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: #fff;\n`;\n\nexport { WordLine, Heading, Button };\n","import React, { useContext, useState } from 'react';\nimport { Input, Button } from '../../components';\nimport theme from '../../configs/theme';\n\nimport wordContext from '../../state/wordContext';\n\nconst FormChangeNumber = () => {\n  const { numberWord, handleChangeNumber } = useContext(wordContext || 9);\n  const [number, setNumber] = useState(numberWord);\n\n  const onChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    handleChangeNumber(number);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <p\n        style={{\n          fontSize: 20,\n          fontWeight: 700,\n          fontFamily: theme.font.family.secondary\n        }}\n      >\n        Change number word\n      </p>\n      <Input\n        block\n        size=\"large\"\n        value={number}\n        onChange={onChange}\n        type=\"number\"\n      />\n      <div style={{ marginBottom: theme.size.space }} />\n      <Button block size=\"large\" type=\"primary\" htmlType=\"submit\">\n        Change now\n      </Button>\n    </form>\n  );\n};\n\nexport default FormChangeNumber;\n","// @flow\nimport React, { memo } from 'react';\nimport { Icon, Modal, Button } from '../../components';\n\nimport connect from '../../state/connect';\n\nimport { WordLine, Heading, Button as ButtonHome } from './style';\nimport icons from '../../assets/icons';\nimport FormChangeNumber from './FormChangeNumber';\nimport theme from '../../configs/theme';\n\ntype Props = {\n  wordsToday: any,\n  reload: Function,\n  updateStatusWord: Function\n};\n\nconst Homepage = ({ wordsToday, reload, updateStatusWord }: Props) => {\n  return (\n    <div style={{ padding: 0 }}>\n      <Heading>\n        <h2\n          style={{\n            fontSize: 20,\n            fontWeight: 300\n          }}\n        >\n          Words\n        </h2>\n        <div style={{ display: 'flex' }}>\n          <Modal\n            label={\n              <ButtonHome>\n                <Icon icon={icons.setting} size={15} />{' '}\n              </ButtonHome>\n            }\n          >\n            <FormChangeNumber />\n          </Modal>\n\n          <div style={{ marginLeft: 10 }} />\n\n          <Modal\n            label={\n              <ButtonHome>\n                <Icon icon={icons.reload} size={15} />\n              </ButtonHome>\n            }\n          >\n            <p\n              style={{\n                fontSize: 20,\n                fontWeight: 700,\n                fontFamily: theme.font.family.secondary\n              }}\n            >\n              Are you sure reload list words?\n            </p>\n            <Button\n              type=\"primary\"\n              onClick={reload}\n              block\n              role=\"presentation\"\n              size=\"large\"\n            >\n              Reload\n            </Button>\n          </Modal>\n        </div>\n      </Heading>\n\n      {wordsToday.map((w, i) => (\n        <WordLine\n          onClick={() => updateStatusWord(w)}\n          key={w.word}\n          style={{ textDecoration: w.status ? 'line-through' : 'none' }}\n        >\n          <span>{i + 1}.</span>\n          {w.word}\n        </WordLine>\n      ))}\n    </div>\n  );\n};\n\nconst select = [\n  {\n    values: ['wordsToday', 'reload', 'updateStatusWord'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(memo(Homepage));\n"],"sourceRoot":""}