{"version":3,"sources":["state/rootContext.js","state/connect.js","pages/Profile/ModalResetCache.js","pages/Profile/style.js","pages/Profile/index.js"],"names":["context","authContext","wordContext","connect","select","Component","props","newProps","forEach","s","values","state","useContext","rootContext","element","flatProps","Title","styled","div","theme","font","family","secondary","size","space","enhance","onClick","reload","useState","success","setSuccess","resetCache","localStorage","removeItem","style","textAlign","display","gridTemplateColumns","gridGap","block","type","Heading","color","border","BoxStyle","TitleStyle","RowLine","Link","primary","user","logout","HeadingScreen","title","marginBottom","displayName","background","to","icon","icons","className","email","setting","getItem","margin","label"],"mappings":"6JAQeA,EALC,CACdC,Y,MAAAA,EACAC,iB,mjBCoBaC,IApBC,SAAAC,GAAM,OAAI,SAAAC,GAAS,OAAI,SAAAC,GACrC,IAAIC,EAAW,GAEfC,kBAAQ,SAAAC,GACN,GAAIA,EAAET,QAAS,CAAC,IACNU,EAAoBD,EAApBC,OAAQV,EAAYS,EAAZT,QAEVW,EAAQC,qBAAWC,EAAYb,IAErCU,EAAOF,QAAQ,SAAAM,GACbP,EAAQ,KAAQA,EAAR,eAAmBO,EAAUH,EAAMG,SAG9CV,GAEH,IAAMW,EAAS,KAAQT,EAAR,GAAkBC,GAEjC,OAAO,kBAACF,EAAcU,O,0SCdxB,IAAMC,EAAQC,IAAOC,IAAV,IAEMC,IAAMC,KAAKC,OAAOC,UAChBH,IAAMI,KAAKC,MAAQ,GAqEvBC,EAFCtB,YAAQ,CAAC,CAAEO,OAAQ,CAAC,UAAWV,QAAS,gBAEzCyB,CA3DS,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,OAAmC,EACvCC,oBAAS,GAD8B,mBAC9DC,EAD8D,KACrDC,EADqD,KAG/DC,EAAa,WACjBC,aAAaC,WAAW,SACxBH,GAAW,IAiDb,OAAO,yBAAKI,MAAO,CAAEC,UAAW,WA7C1BN,EAEA,oCACE,kBAACb,EAAD,6BACA,yBACEkB,MAAO,CACLE,QAAS,OACTC,oBAAqB,iBACrBC,QAASnB,IAAMI,KAAKC,QAGtB,kBAAC,IAAD,CAAQE,QAASA,EAASH,KAAK,QAAQgB,OAAK,GAA5C,QAIA,kBAAC,IAAD,CAAQb,QAASC,EAAQJ,KAAK,QAAQgB,OAAK,EAACC,KAAK,WAAjD,iBASN,oCACE,kBAACxB,EAAD,wCACA,yBACEkB,MAAO,CACLE,QAAS,OACTC,oBAAqB,iBACrBC,QAASnB,IAAMI,KAAKC,QAGtB,kBAAC,IAAD,CAAQE,QAASA,EAASH,KAAK,QAAQgB,OAAK,GAA5C,QAIA,kBAAC,IAAD,CAAQC,KAAK,UAAUd,QAASK,EAAYR,KAAK,QAAQgB,OAAK,GAA9D,kB,yxBC9DV,IAAME,EAAUxB,IAAOC,IAAV,IAEOC,IAAMI,KAAKC,MAKFL,IAAMuB,MAAMC,QAGnCC,EAAW3B,IAAOC,IAAV,KAIR2B,EAAa5B,IAAOC,IAAV,KAIV4B,EAAU7B,YAAO8B,IAAP9B,CAAH,IAIgBE,IAAMuB,MAAMC,OACT,IAAnBxB,IAAMI,KAAKC,MAAoC,EAAnBL,IAAMI,KAAKC,MAUvCL,IAAMuB,MAAMM,SCoDV7C,sBAFA,CAAC,CAAEO,OAAQ,CAAC,OAAQ,UAAWV,QAAS,gBAExCG,CAxEC,SAAC,GAAoC,IAAlC8C,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OACvB,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAeC,MAAM,YAErB,kBAACX,EAAD,KACE,yBAAKP,MAAO,CAAEmB,aAAc,KAC1B,kBAAC,IAAD,CAAQ9B,KAAM,MACd,6BAAM0B,EAAKK,eAGf,6BACE,kBAACV,EAAD,KACE,kBAACE,EAAD,CAASZ,MAAO,CAAEqB,WAAY,WAAaC,GAAG,YAC5C,kBAACX,EAAD,gBACA,6BACE,kBAAC,IAAD,CAAMY,KAAMC,IAAMT,KAAM1B,KAAM,OAIlC,kBAACuB,EAAD,CAASU,GAAG,YACV,0BAAMG,UAAU,SAAhB,gBACA,8BAAOV,EAAKK,cAGd,kBAACR,EAAD,CAASU,GAAG,YACV,0BAAMG,UAAU,SAAhB,SACA,8BAAOV,EAAKW,SAIhB,kBAAChB,EAAD,KACE,kBAACE,EAAD,CAASZ,MAAO,CAAEqB,WAAY,WAAaC,GAAG,YAC5C,kBAACX,EAAD,gBACA,6BACE,kBAAC,IAAD,CAAMY,KAAMC,IAAMG,QAAStC,KAAM,OAGrC,kBAACuB,EAAD,CAASU,GAAG,kBACV,0BAAMG,UAAU,SAAhB,eACA,8BAAO3B,aAAa8B,QAAQ,WAAa,MAI7C,yBACE5B,MAAO,CACL6B,OAA2B,EAAnB5C,IAAMI,KAAKC,MACnBY,QAAS,OACTC,oBAAqB,iBACrBC,QAA4B,EAAnBnB,IAAMI,KAAKC,QAGtB,kBAAC,IAAD,CAAQe,OAAK,EAAChB,KAAK,QAAQG,QAASwB,GAApC,WAGA,kBAAC,IAAD,CACEc,MACE,kBAAC,IAAD,CAAQxB,KAAK,YAAYjB,KAAK,QAAQgB,OAAK,GAA3C,iBAKF,kBAAC,EAAD","file":"static/js/7.9c9bc7bf.chunk.js","sourcesContent":["import wordContext from './wordContext';\nimport authContext from './authContext';\n\nconst context = {\n  authContext,\n  wordContext\n};\n\nexport default context;\n","// @flow\nimport { forEach } from 'lodash/fp';\nimport React, { useContext } from 'react';\nimport rootContext from './rootContext';\n\nconst connect = select => Component => props => {\n  let newProps = {};\n\n  forEach(s => {\n    if (s.context) {\n      const { values, context } = s;\n\n      const state = useContext(rootContext[context]);\n\n      values.forEach(element => {\n        newProps = { ...newProps, [element]: state[element] };\n      });\n    }\n  }, select);\n\n  const flatProps = { ...props, ...newProps };\n\n  return <Component {...flatProps} />;\n};\n\nexport default connect;\n","// @flow\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport connect from '../../state/connect';\nimport { Button } from '../../components';\nimport theme from '../../configs/theme';\n\nconst Title = styled.div`\n  font-size: 20px;\n  font-family: ${theme.font.family.secondary};\n  margin-bottom: ${theme.size.space + 5}px;\n  line-height: 1.5;\n  font-weight: 600;\n`;\n\ntype ModalResetCacheProps = {\n  onClick: Function,\n  reload: Function\n};\n\nconst ModalResetCache = ({ onClick, reload }: ModalResetCacheProps) => {\n  const [success, setSuccess] = useState(false);\n\n  const resetCache = () => {\n    localStorage.removeItem('words');\n    setSuccess(true);\n  };\n\n  const renderContent = () => {\n    if (success) {\n      return (\n        <>\n          <Title>Cache has been reset</Title>\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n              gridGap: theme.size.space\n            }}\n          >\n            <Button onClick={onClick} size=\"large\" block>\n              Exit\n            </Button>\n\n            <Button onClick={reload} size=\"large\" block type=\"primary\">\n              Reload data\n            </Button>\n          </div>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <Title>Do you want to clear the cache?</Title>\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, 1fr)',\n            gridGap: theme.size.space\n          }}\n        >\n          <Button onClick={onClick} size=\"large\" block>\n            Exit\n          </Button>\n\n          <Button type=\"primary\" onClick={resetCache} size=\"large\" block>\n            Yes, i do\n          </Button>\n        </div>\n      </>\n    );\n  };\n\n  return <div style={{ textAlign: 'center' }}>{renderContent()}</div>;\n};\n\nconst enhance = connect([{ values: ['reload'], context: 'wordContext' }]);\n\nexport default enhance(ModalResetCache);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport theme from '../../configs/theme';\n\nconst Heading = styled.div`\n  minheight: 150px;\n  padding-bottom: ${theme.size.space}px;\n  display: flex;\n  align-items: center;\n  flexdirection: column;\n  justify-content: center;\n  border-bottom: 1px solid ${theme.color.border};\n`;\n\nconst BoxStyle = styled.div`\n  overflow: hidden;\n`;\n\nconst TitleStyle = styled.div`\n  font-weight: 700;\n`;\n\nconst RowLine = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${theme.color.border};\n  padding: ${theme.size.space * 1.5}px ${theme.size.space * 2}px;\n\n  .label {\n    color: #999;\n    font-weight: 600;\n  }\n\n  span:last-child {\n    font-size: 18px;\n    font-weight 700;\n    color: ${theme.color.primary}\n  }\n`;\n\nexport { Heading, BoxStyle, TitleStyle, RowLine };\n","import React from 'react';\n\nimport { Avatar, Icon, Button, Modal, Layout } from '../../components';\nimport connect from '../../state/connect';\nimport theme from '../../configs/theme';\nimport icons from '../../assets/icons';\nimport HeadingScreen from '../../components/HeadingScreen';\nimport ModalResetCache from './ModalResetCache';\nimport { Heading, BoxStyle, TitleStyle, RowLine } from './style';\n\ntype ProfileProps = {\n  user: {\n    displayName: String,\n    email: String\n  },\n  logout: Function\n};\n\nconst Profile = ({ user, logout }: ProfileProps) => {\n  return (\n    <Layout>\n      <HeadingScreen title=\"Profile\" />\n\n      <Heading>\n        <div style={{ marginBottom: 30 }}>\n          <Avatar size={100} />\n          <div>{user.displayName}</div>\n        </div>\n      </Heading>\n      <div>\n        <BoxStyle>\n          <RowLine style={{ background: '#f9f9f9' }} to=\"/profile\">\n            <TitleStyle>Profile</TitleStyle>\n            <div>\n              <Icon icon={icons.user} size={16} />\n            </div>\n          </RowLine>\n\n          <RowLine to=\"/profile\">\n            <span className=\"label\">Display name</span>\n            <span>{user.displayName}</span>\n          </RowLine>\n\n          <RowLine to=\"/profile\">\n            <span className=\"label\">Email</span>\n            <span>{user.email}</span>\n          </RowLine>\n        </BoxStyle>\n\n        <BoxStyle>\n          <RowLine style={{ background: '#f9f9f9' }} to=\"/profile\">\n            <TitleStyle>Setting</TitleStyle>\n            <div>\n              <Icon icon={icons.setting} size={16} />\n            </div>\n          </RowLine>\n          <RowLine to=\"setting-number\">\n            <span className=\"label\">Number word</span>\n            <span>{localStorage.getItem('number') || 10}</span>\n          </RowLine>\n        </BoxStyle>\n\n        <div\n          style={{\n            margin: theme.size.space * 2,\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, 1fr)',\n            gridGap: theme.size.space * 2\n          }}\n        >\n          <Button block size=\"large\" onClick={logout}>\n            Log out\n          </Button>\n          <Modal\n            label={\n              <Button type=\"secondary\" size=\"large\" block>\n                Reset cached\n              </Button>\n            }\n          >\n            <ModalResetCache />\n          </Modal>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nconst select = [{ values: ['user', 'logout'], context: 'authContext' }];\n\nexport default connect(select)(Profile);\n"],"sourceRoot":""}