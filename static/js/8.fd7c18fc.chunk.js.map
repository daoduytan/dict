{"version":3,"sources":["state/rootContext.js","state/connect.js","pages/Homepage/style.js","pages/Homepage/FormChangeNumber.js","pages/Homepage/Word.js","pages/Homepage/Tabs.js","pages/Homepage/index.js"],"names":["context","authContext","wordContext","connect","select","Component","props","newProps","forEach","s","values","state","useContext","rootContext","element","Object","objectSpread","defineProperty","flatProps","react_default","a","createElement","WordLine","styled","Link","_templateObject","theme","color","border","font","family","secondary","Heading","div","_templateObject2","Button","_templateObject3","FormChangeNumber","_useContext","numberWord","handleChangeNumber","_useState","useState","_useState2","slicedToArray","number","setNumber","onSubmit","e","preventDefault","style","fontSize","fontWeight","fontFamily","components","block","size","value","onChange","target","type","marginBottom","space","htmlType","ref","firestore","collection","ref1","Word","_ref","word","console","log","w","setW","position","to","concat","key","textDecoration","status","primary","text","top","right","bottom","padding","display","alignItems","icon","icons","check","onClick","newType","where","get","then","snapshot","empty","doc","data","id","update","add","role","TabHeadingStyle","Tabs_templateObject","active","_ref2","TabHeading","_ref3","title","rest","objectWithoutProperties","assign","TabPanel","_ref4","children","TabToday","_ref5","wordsToday","map","i","Homepage_Word","TabDay","TabWeek","TabMonth","Tabs","activeTab","setActiveTab","handleChangeTab","toNumber","gridTemplateColumns","borderBottom","background","Tabs_TabHeading","Tabs_TabDay","Tabs_TabWeek","Tabs_TabMonth","memo","reload","label","setting","Homepage_FormChangeNumber","marginLeft","Homepage_Tabs"],"mappings":"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","file":"static/js/8.fd7c18fc.chunk.js","sourcesContent":["import wordContext from './wordContext';\nimport authContext from './authContext';\n\nconst context = {\n  authContext,\n  wordContext\n};\n\nexport default context;\n","// @flow\nimport { forEach } from 'lodash/fp';\nimport React, { useContext } from 'react';\nimport rootContext from './rootContext';\n\nconst connect = select => Component => props => {\n  let newProps = {};\n\n  forEach(s => {\n    if (s.context) {\n      const { values, context } = s;\n\n      const state = useContext(rootContext[context]);\n      values.forEach(element => {\n        newProps = { ...newProps, [element]: state[element] };\n      });\n    }\n  }, select);\n\n  const flatProps = { ...props, ...newProps };\n\n  return <Component {...flatProps} />;\n};\n\nexport default connect;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport theme from '../../configs/theme';\n\nconst WordLine = styled(Link)`\n  height: 70px;\n  display: flex;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n  padding: 15px;\n  border-bottom: 1px solid ${theme.color.border};\n  font-family: ${theme.font.family.secondary};\n\n  span {\n    text-align: center;\n    display: inline-block;\n    width: 50px;\n    margin-right: 30px;\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst Heading = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 20px 0px;\n  background: #fff;\n`;\n\nconst Button = styled.div`\n  border: 1px solid ${theme.color.border};\n  height: 40px;\n  padding: 0 15px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: #fff;\n`;\n\nexport { WordLine, Heading, Button };\n","import React, { useContext, useState } from 'react';\nimport { Input, Button } from '../../components';\nimport theme from '../../configs/theme';\n\nimport wordContext from '../../state/wordContext';\n\nconst FormChangeNumber = () => {\n  const { numberWord, handleChangeNumber } = useContext(wordContext || 9);\n  const [number, setNumber] = useState(numberWord);\n\n  const onChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    handleChangeNumber(number);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <p\n        style={{\n          fontSize: 20,\n          fontWeight: 700,\n          fontFamily: theme.font.family.secondary\n        }}\n      >\n        Change number word\n      </p>\n      <Input\n        block\n        size=\"large\"\n        value={number}\n        onChange={onChange}\n        type=\"number\"\n      />\n      <div style={{ marginBottom: theme.size.space }} />\n      <Button block size=\"large\" type=\"primary\" htmlType=\"submit\">\n        Change now\n      </Button>\n    </form>\n  );\n};\n\nexport default FormChangeNumber;\n","import React, { memo, useState } from 'react';\n\nimport { Icon } from '../../components';\nimport icons from '../../assets/icons';\nimport { firestore } from '../../api';\nimport theme from '../../configs/theme';\nimport { WordLine } from './style';\n\nconst ref = firestore.collection('words_today');\nconst ref1 = firestore.collection('words_done');\n\ntype WordProps = {\n  word: {\n    word: String,\n    status: String,\n    number: Number,\n    id: String\n  },\n  type: String\n};\n\nconst Word = ({ word, type }: WordProps) => {\n  console.log(word, type);\n\n  const [w, setW] = useState(word);\n\n  const handleChangeType = () => {\n    const newType = () => {\n      if (word === 'today') {\n        return 'day';\n      }\n      if (type === 'day') {\n        return 'week';\n      }\n      if (type === 'week') {\n        return 'month';\n      }\n\n      return 'day';\n    };\n\n    // console.log('dadas', newType(), w);\n\n    ref\n      .where('word', '==', w.word)\n      .get()\n      .then(snapshot => {\n        if (snapshot.empty) {\n          return null;\n        }\n\n        snapshot.forEach(doc => {\n          console.log(doc.data());\n\n          ref.doc(doc.id).update({\n            type: newType()\n          });\n        });\n      });\n\n    setW({ ...w, type: newType() });\n\n    ref1.add({ ...word, type: newType() });\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <WordLine\n        to={`/word/${w.word}`}\n        key={w.word}\n        style={{\n          textDecoration: w.status ? 'line-through' : 'none',\n          color: w.status ? theme.color.primary : theme.color.text\n        }}\n      >\n        <span>{w.number + 1}.</span>\n        {w.word}\n      </WordLine>\n\n      {w.status && w.type !== type && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <Icon icon={icons.check} size={20} color={theme.color.secondary} />\n        </div>\n      )}\n\n      {w.status && w.type === type && (\n        <div\n          onClick={handleChangeType}\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n          role=\"presentation\"\n        >\n          <Icon icon={icons.right} size={20} color={theme.color.primary} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Word;\n","import React, { useState } from 'react';\nimport { toNumber } from 'lodash/fp';\n\nimport styled from 'styled-components';\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport theme from '../../configs/theme';\n\nconst TabHeadingStyle = styled.div`\n  flex: 1;\n  padding: 15px 10px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  position: relative;\n\n  color: ${({ active }) => (active ? theme.color.primary : theme.color.text)};\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n    display: block;\n    height: 2px;\n    background: ${({ active }) =>\n      active ? theme.color.primary : 'transparent'};\n  }\n`;\n\nconst TabHeading = ({ title, onClick, active, ...rest }) => {\n  return (\n    <TabHeadingStyle onClick={onClick} active={active} {...rest}>\n      {title}\n    </TabHeadingStyle>\n  );\n};\n\nconst TabPanel = ({ children }) => children;\n\nconst select = [\n  {\n    values: ['wordsToday'],\n    context: 'wordContext'\n  }\n];\n\nconst TabToday = connect(select)(({ wordsToday }) =>\n  wordsToday.map((w, i) => (\n    <Word\n      key={w.word}\n      word={{ ...w, number: i, type: w.type || 'today' }}\n      type=\"today\"\n    />\n  ))\n);\n\nconst TabDay = () => {\n  return <div>TabDay</div>;\n};\nconst TabWeek = () => <div>TabWeek</div>;\n\nconst TabMonth = () => <div>TabMonth</div>;\n\nconst Tabs = () => {\n  const [activeTab, setActiveTab] = useState(1);\n\n  const handleChangeTab = e => {\n    setActiveTab(toNumber(e.target.id));\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(4, 1fr)',\n          borderBottom: '1px solid #eee',\n          background: '#fff'\n        }}\n      >\n        <TabHeading\n          title=\"Today\"\n          onClick={handleChangeTab}\n          id={1}\n          active={activeTab === 1}\n        />\n        <TabHeading\n          title=\"Day\"\n          onClick={handleChangeTab}\n          id={2}\n          active={activeTab === 2}\n        />\n        <TabHeading\n          title=\"Week\"\n          onClick={handleChangeTab}\n          id={3}\n          active={activeTab === 3}\n        />\n        <TabHeading\n          title=\"Month\"\n          onClick={handleChangeTab}\n          id={4}\n          active={activeTab === 4}\n        />\n      </div>\n\n      <div>\n        {activeTab === 1 && (\n          <TabPanel>\n            <TabToday />\n          </TabPanel>\n        )}\n\n        {activeTab === 2 && (\n          <TabPanel>\n            <TabDay />\n          </TabPanel>\n        )}\n\n        {activeTab === 3 && (\n          <TabPanel>\n            <TabWeek />\n          </TabPanel>\n        )}\n\n        {activeTab === 4 && (\n          <TabPanel>\n            <TabMonth />\n          </TabPanel>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tabs;\n","// @flow\nimport React, { memo, useState } from 'react';\n\nimport { Icon, Modal, Button } from '../../components';\n\nimport connect from '../../state/connect';\n\nimport { WordLine, Heading, Button as ButtonHome } from './style';\nimport icons from '../../assets/icons';\nimport FormChangeNumber from './FormChangeNumber';\nimport theme from '../../configs/theme';\n\nimport { firestore } from '../../api';\nimport Tabs from './Tabs';\n\nconst ref = firestore.collection('words_today');\nconst ref1 = firestore.collection('words_done');\n\ntype Props = {\n  wordsToday: any,\n  reload: Function\n};\n\nconst Homepage = ({ wordsToday, reload }: Props) => {\n  return (\n    <div style={{ padding: 0 }}>\n      <Heading>\n        <h2\n          style={{\n            fontSize: 20,\n            fontWeight: 300\n          }}\n        >\n          Words\n        </h2>\n        <div style={{ display: 'flex' }}>\n          <Modal\n            label={\n              <ButtonHome>\n                <Icon icon={icons.setting} size={15} />{' '}\n              </ButtonHome>\n            }\n          >\n            <FormChangeNumber />\n          </Modal>\n\n          <div style={{ marginLeft: 10 }} />\n\n          <Modal\n            label={\n              <ButtonHome>\n                <Icon icon={icons.reload} size={15} />\n              </ButtonHome>\n            }\n          >\n            <p\n              style={{\n                fontSize: 20,\n                fontWeight: 700,\n                fontFamily: theme.font.family.secondary\n              }}\n            >\n              Are you sure reload list words?\n            </p>\n            <Button\n              type=\"primary\"\n              onClick={reload}\n              block\n              role=\"presentation\"\n              size=\"large\"\n            >\n              Reload\n            </Button>\n          </Modal>\n        </div>\n      </Heading>\n\n      <Tabs />\n    </div>\n  );\n};\n\nconst select = [\n  {\n    values: ['wordsToday', 'reload', 'updateStatusWord'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(memo(Homepage));\n"],"sourceRoot":""}