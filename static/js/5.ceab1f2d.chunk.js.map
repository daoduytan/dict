{"version":3,"sources":["pages/Homepage/NoWord.js","pages/Homepage/TabDay.js","pages/Homepage/TabWeek.js","pages/Homepage/TabMonth.js","pages/Homepage/Tabs.js","pages/Homepage/Heading.js","pages/Homepage/index.js","pages/Homepage/Word.js","pages/Homepage/style.js"],"names":["memo","style","display","alignItems","justifyContent","padding","textAlign","src","no_word","alt","width","fontSize","fontFamily","theme","font","family","secondary","select","connect","values","context","wordsDay","words_done","filter","w","type","length","map","i","Word","key","word","number","wordsWeek","wordsMonth","TabHeadingStyle","styled","div","active","color","primary","text","TabHeading","title","onClick","rest","TabPanel","children","TabToday","enhance","wordsToday","reload","wordNotDone","find","status","margin","size","block","Tabs","useState","activeTab","setActiveTab","handleChangeTab","e","toNumber","target","id","gridTemplateColumns","borderBottom","background","user","paddingRight","displayName","lineHeight","to","ref","firestore","collection","ref1","updateTypeDate","setW","uid","console","log","position","top","right","bottom","icon","icons","check","newType","doc","where","get","then","snapshot","empty","forEach","update","add","role","WordLine","Link","border","HeadingWrap","space"],"mappings":"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","file":"static/js/5.ceab1f2d.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nimport { no_word } from '../../assets/images';\nimport theme from '../../configs/theme';\n\nconst NoWord = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '70px 0'\n      }}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <img src={no_word} alt=\"\" style={{ width: 200 }} />\n        <div style={{ fontSize: 18, fontFamily: theme.font.family.secondary }}>\n          No word\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(NoWord);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabDay = ({ words_done }: TabDayProps) => {\n  const wordsDay = words_done.filter(w => w.type === 'day');\n\n  if (wordsDay.length === 0) return <NoWord />;\n\n  return wordsDay.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'day' }} type=\"day\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabDay);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabWeek = ({ words_done }: TabDayProps) => {\n  const wordsWeek = words_done.filter(w => w.type === 'week');\n\n  if (wordsWeek.length === 0) return <NoWord />;\n\n  return wordsWeek.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'week' }} type=\"week\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabWeek);\n","// @flow\nimport React from 'react';\n\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport NoWord from './NoWord';\n\ntype TabDayProps = { words_done: any };\n\nconst TabMonth = ({ words_done }: TabDayProps) => {\n  const wordsMonth = words_done.filter(w => w.type === 'month');\n\n  if (wordsMonth.length === 0) return <NoWord />;\n\n  return wordsMonth.map((w, i) => (\n    <Word key={w.word} word={{ ...w, number: i, type: 'month' }} type=\"month\" />\n  ));\n};\n\nconst select = connect([\n  {\n    values: ['words_done'],\n    context: 'wordContext'\n  }\n]);\n\nexport default select(TabMonth);\n","// @flow\nimport React, { useState } from 'react';\nimport { toNumber, find } from 'lodash/fp';\n\nimport styled from 'styled-components';\nimport connect from '../../state/connect';\nimport Word from './Word';\nimport theme from '../../configs/theme';\n\nimport TabDay from './TabDay';\nimport TabWeek from './TabWeek';\nimport TabMonth from './TabMonth';\nimport { Button } from '../../components';\n\nconst TabHeadingStyle = styled.div`\n  flex: 1;\n  padding: 15px 10px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 14px;\n  text-transform: uppercase;\n  position: relative;\n\n  color: ${({ active }) => (active ? theme.color.primary : theme.color.text)};\n\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n    display: block;\n    height: 2px;\n    background: ${({ active }) =>\n      active ? theme.color.primary : 'transparent'};\n  }\n`;\n\ntype TabHeadingProps = {\n  title: String,\n  onClick: Function,\n  active: Boolean\n};\n\nconst TabHeading = ({ title, onClick, active, ...rest }: TabHeadingProps) => {\n  return (\n    <TabHeadingStyle onClick={onClick} active={active} {...rest}>\n      {title}\n    </TabHeadingStyle>\n  );\n};\n\nconst TabPanel = ({ children }) => children;\n\nconst enhance = connect([\n  {\n    values: ['wordsToday', 'reload'],\n    context: 'wordContext'\n  }\n]);\n\nconst TabToday = enhance(({ wordsToday, reload }) => {\n  const wordNotDone = find(w => w.status === false, wordsToday);\n\n  return (\n    <>\n      {wordsToday.map((w, i) => (\n        <Word\n          key={w.word}\n          word={{ ...w, number: i, type: w.type || 'today' }}\n          type=\"today\"\n        />\n      ))}\n\n      {!wordNotDone && (\n        <div style={{ margin: 30 }}>\n          <Button type=\"primary\" size=\"large\" block onClick={reload}>\n            Load more\n          </Button>\n        </div>\n      )}\n    </>\n  );\n});\n\nconst Tabs = () => {\n  const [activeTab, setActiveTab] = useState(1);\n\n  const handleChangeTab = e => {\n    setActiveTab(toNumber(e.target.id));\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(4, 1fr)',\n          borderBottom: '1px solid #ddd',\n          background: '#fff'\n        }}\n      >\n        <TabHeading\n          title=\"Today\"\n          onClick={handleChangeTab}\n          id={1}\n          active={activeTab === 1}\n        />\n        <TabHeading\n          title=\"Day\"\n          onClick={handleChangeTab}\n          id={2}\n          active={activeTab === 2}\n        />\n        <TabHeading\n          title=\"Week\"\n          onClick={handleChangeTab}\n          id={3}\n          active={activeTab === 3}\n        />\n        <TabHeading\n          title=\"Month\"\n          onClick={handleChangeTab}\n          id={4}\n          active={activeTab === 4}\n        />\n      </div>\n\n      <div>\n        {activeTab === 1 && (\n          <TabPanel>\n            <TabToday />\n          </TabPanel>\n        )}\n\n        {activeTab === 2 && (\n          <TabPanel>\n            <TabDay />\n          </TabPanel>\n        )}\n\n        {activeTab === 3 && (\n          <TabPanel>\n            <TabWeek />\n          </TabPanel>\n        )}\n\n        {activeTab === 4 && (\n          <TabPanel>\n            <TabMonth />\n          </TabPanel>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tabs;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport connect from '../../state/connect';\nimport { Avatar } from '../../components';\nimport { HeadingWrap } from './style';\n\ntype HeadingProps = { user: any };\n\nconst Heading = ({ user }: HeadingProps) => {\n  return (\n    <>\n      <HeadingWrap>\n        <div style={{ paddingRight: 30 }}>\n          <h2 style={{ margin: '5px 0', fontSize: 30 }}>\n            Hi, {user.displayName}\n          </h2>\n          <p style={{ lineHeight: 1.5 }}>Learn vocabulary every day</p>\n        </div>\n\n        <Link to=\"/profile\">\n          <Avatar />\n        </Link>\n      </HeadingWrap>\n    </>\n  );\n};\n\nconst select = [{ values: ['user'], context: 'authContext' }];\n\nexport default connect(select)(Heading);\n","// @flow\nimport React, { memo } from 'react';\n\nimport Tabs from './Tabs';\nimport Heading from './Heading';\n\nconst Homepage = () => {\n  return (\n    <>\n      <Heading />\n\n      <Tabs />\n    </>\n  );\n};\n\nexport default memo(Homepage);\n","import React, { useState } from 'react';\n\nimport { Icon } from '../../components';\nimport icons from '../../assets/icons';\nimport { firestore } from '../../api';\nimport theme from '../../configs/theme';\nimport { WordLine } from './style';\nimport connect from '../../state/connect';\n\nconst ref = firestore.collection('user');\nconst ref1 = firestore.collection('words_done');\n\ntype WordProps = {\n  word: {\n    word: String,\n    status: String,\n    number: Number,\n    id: String\n  },\n  user: {\n    uid: String\n  },\n  type: String,\n  updateTypeDate: Function\n};\n\nconst Word = ({ word, type, user, updateTypeDate }: WordProps) => {\n  const [w, setW] = useState(word);\n\n  const { uid } = user;\n\n  console.log('user', uid);\n\n  const handleChangeType = () => {\n    const newType = () => {\n      if (type === 'today') {\n        return 'day';\n      }\n      if (type === 'day') {\n        return 'week';\n      }\n      if (type === 'week') {\n        return 'month';\n      }\n\n      return 'day';\n    };\n\n    ref\n      .doc(uid)\n      .collection('word_today')\n      .where('word', '==', w.word)\n      .get()\n      .then(snapshot => {\n        if (snapshot.empty) {\n          return null;\n        }\n\n        return snapshot.forEach(doc => {\n          ref\n            .doc(uid)\n            .collection('word_today')\n            .doc(doc.id)\n            .update({\n              type: newType()\n            });\n        });\n      });\n\n    setW({ ...w, type: newType() });\n\n    updateTypeDate({ ...w, type: newType() });\n\n    if (type === 'today') {\n      ref1.add({ ...word, uid, type: newType() });\n    } else {\n      ref1\n\n        .where('uid', '==', user.uid)\n        .get()\n        .then(snapshot => {\n          if (snapshot.empty) {\n            return null;\n          }\n\n          return snapshot.forEach(doc => {\n            ref1.doc(doc.id).update({\n              type: newType()\n            });\n          });\n        });\n    }\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <WordLine\n        to={`/word/${w.word}`}\n        key={w.word}\n        style={{\n          color: w.status ? theme.color.primary : theme.color.text\n        }}\n      >\n        <span>{w.number + 1}.</span>\n        {w.word}\n      </WordLine>\n\n      {w.status && w.type !== type && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <Icon icon={icons.check} size={20} color={theme.color.secondary} />\n        </div>\n      )}\n\n      {w.status && w.type === type && w.type !== 'month' && (\n        <div\n          onClick={handleChangeType}\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n          role=\"presentation\"\n        >\n          <Icon icon={icons.right} size={20} color={theme.color.primary} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst select = [\n  { values: ['user'], context: 'authContext' },\n  {\n    values: ['updateTypeDate'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(Word);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport theme from '../../configs/theme';\n\nconst WordLine = styled(Link)`\n  height: 70px;\n  display: flex;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n  padding: 15px;\n  border-bottom: 1px solid ${theme.color.border};\n  font-family: ${theme.font.family.secondary};\n\n  span {\n    text-align: center;\n    display: inline-block;\n    width: 50px;\n    margin-right: 30px;\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst HeadingWrap = styled.div`\n  // background: ${theme.color.primary};\n  // color: #fff;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${theme.size.space + 5}px ${theme.size.space * 2}px\n    ${theme.size.space - 5}px ${theme.size.space * 2}px;\n    \n`;\n\nconst Button = styled.div`\n  border: 1px solid ${theme.color.border};\n  height: 40px;\n  padding: 0 15px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: #fff;\n`;\n\nexport { WordLine, HeadingWrap, Button };\n"],"sourceRoot":""}