{"version":3,"sources":["state/rootContext.js","state/connect.js","pages/Homepage/Word.js","pages/Homepage/style.js","pages/WordsDone/useHooks.js","pages/WordsDone/index.js"],"names":["context","authContext","wordContext","connect","select","Component","props","newProps","forEach","s","values","state","useContext","rootContext","element","flatProps","ref","firestore","collection","ref1","word","type","user","updateTypeDate","useState","w","setW","uid","style","position","to","key","color","status","theme","primary","text","number","flex","display","justifyContent","alignItems","paddingRight","day","Date","now","fontSize","fontStyle","fontWeight","fontFamily","font","family","moment","top","right","bottom","padding","icon","icons","check","size","secondary","onClick","newType","doc","where","get","then","snapshot","empty","id","update","add","role","WordLine","styled","Link","border","HeadingWrap","div","space","enhance","loading","setLoading","words","setWords","useEffect","onSnapshot","docSnapshot","wordsDone","docs","push","data","useWordsDone","width","length","HeadingScreen","title","lineHeight","height","background","borderRadius","overflow","left","zIndex","map","i","Word"],"mappings":"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","file":"static/js/5.270aebea.chunk.js","sourcesContent":["import wordContext from './wordContext';\nimport authContext from './authContext';\n\nconst context = {\n  authContext,\n  wordContext\n};\n\nexport default context;\n","// @flow\nimport { forEach } from 'lodash/fp';\nimport React, { useContext } from 'react';\nimport rootContext from './rootContext';\n\nconst connect = select => Component => props => {\n  let newProps = {};\n\n  forEach(s => {\n    if (s.context) {\n      const { values, context } = s;\n\n      const state = useContext(rootContext[context]);\n      values.forEach(element => {\n        newProps = { ...newProps, [element]: state[element] };\n      });\n    }\n  }, select);\n\n  const flatProps = { ...props, ...newProps };\n\n  return <Component {...flatProps} />;\n};\n\nexport default connect;\n","import React, { useState } from 'react';\nimport moment from 'moment';\n\nimport { Icon } from '../../components';\nimport icons from '../../assets/icons';\nimport { firestore } from '../../api';\nimport theme from '../../configs/theme';\nimport { WordLine } from './style';\nimport connect from '../../state/connect';\n\nconst ref = firestore.collection('user');\nconst ref1 = firestore.collection('words_done');\n\ntype WordProps = {\n  word: {\n    word: String,\n    status: String,\n    number: Number,\n    id: String\n  },\n  user: {\n    uid: String\n  },\n  type: String,\n  updateTypeDate: Function\n};\n\nconst Word = ({ word, type, user, updateTypeDate }: WordProps) => {\n  const [w, setW] = useState(word);\n\n  const { uid } = user;\n\n  const handleChangeType = () => {\n    const newType = () => {\n      if (type === 'today') {\n        return 'day';\n      }\n      if (type === 'day') {\n        return 'week';\n      }\n      if (type === 'week') {\n        return 'month';\n      }\n\n      return 'day';\n    };\n\n    ref\n      .doc(uid)\n      .collection('word_today')\n      .where('word', '==', w.word)\n      .get()\n      .then(snapshot => {\n        if (snapshot.empty) {\n          return null;\n        }\n\n        return snapshot.forEach(doc => {\n          ref\n            .doc(uid)\n            .collection('word_today')\n            .doc(doc.id)\n            .update({\n              type: newType()\n            });\n        });\n      });\n\n    setW({ ...w, type: newType() });\n\n    updateTypeDate({ ...w, type: newType() });\n\n    if (type === 'today') {\n      ref1.add({ ...word, uid, type: newType() });\n    } else {\n      ref1\n\n        .where('uid', '==', user.uid)\n        .get()\n        .then(snapshot => {\n          if (snapshot.empty) {\n            return null;\n          }\n\n          return snapshot.forEach(doc => {\n            ref1.doc(doc.id).update({\n              type: newType()\n            });\n          });\n        });\n    }\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <WordLine\n        to={`/word/${w.word}`}\n        key={w.word}\n        style={{\n          color: w.status ? theme.color.primary : theme.color.text\n        }}\n      >\n        <span>{w.number + 1}.</span>\n        <div\n          style={{\n            flex: 1,\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            paddingRight: 50\n          }}\n        >\n          {w.word}\n          {w.day && Date.now() - w.day + 7 * 24 * 60 * 60 * 1000 > 0 && (\n            <div\n              style={{\n                color: theme.color.text,\n                fontSize: 14,\n                fontStyle: 'italic',\n                fontWeight: 600,\n                fontFamily: theme.font.family.primary\n              }}\n            >\n              {moment(Date.now()).to(moment(w.day + 7 * 24 * 60 * 60 * 1000))}\n            </div>\n          )}\n\n          {w.day && Date.now() - w.day + 7 * 24 * 60 * 60 * 1000 < 0 && (\n            <div\n              style={{\n                color: 'red',\n                fontSize: 16,\n                fontWeight: 400,\n                fontFamily: theme.font.family.primary\n              }}\n            >\n              Time out\n            </div>\n          )}\n        </div>\n      </WordLine>\n\n      {w.status && w.type !== type && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <Icon icon={icons.check} size={20} color={theme.color.secondary} />\n        </div>\n      )}\n\n      {w.status && w.type === type && w.type !== 'month' && (\n        <div\n          onClick={handleChangeType}\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            padding: '0 15px',\n            display: 'flex',\n            alignItems: 'center'\n          }}\n          role=\"presentation\"\n        >\n          <Icon icon={icons.right} size={20} color={theme.color.primary} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst select = [\n  { values: ['user'], context: 'authContext' },\n  {\n    values: ['updateTypeDate'],\n    context: 'wordContext'\n  }\n];\n\nexport default connect(select)(Word);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport theme from '../../configs/theme';\n\nconst WordLine = styled(Link)`\n  min-height: 70px;\n  display: flex;\n  align-items: center;\n  font-size: 25px;\n  font-weight: 700;\n  padding: 15px;\n  border-bottom: 1px solid ${theme.color.border};\n  font-family: ${theme.font.family.secondary};\n\n  span {\n    text-align: center;\n    display: inline-block;\n    width: 50px;\n    margin-right: 15px;\n    color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst HeadingWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #fff;\n  padding: ${theme.size.space * 2}px ${theme.size.space * 2}px\n    ${theme.size.space}px ${theme.size.space * 2}px;\n`;\n\nconst Button = styled.div`\n  border: 1px solid ${theme.color.border};\n  height: 40px;\n  padding: 0 15px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: #fff;\n`;\n\nexport { WordLine, HeadingWrap, Button };\n","import { useState, useEffect } from 'react';\nimport { firestore } from '../../api';\n\nconst ref = firestore.collection('words_done');\n\nconst useWordsDone = user => {\n  const [loading, setLoading] = useState(true);\n  const [words, setWords] = useState([]);\n\n  useEffect(() => {\n    const { uid } = user;\n\n    ref.where('uid', '==', uid).onSnapshot(docSnapshot => {\n      const wordsDone = [];\n      setLoading(true);\n      docSnapshot.forEach(docs => wordsDone.push(docs.data()));\n\n      setWords(wordsDone);\n      setLoading(false);\n    });\n  }, [user]);\n\n  return [loading, words];\n};\n\n// eslint-disable-next-line\nexport { useWordsDone };\n","import React from 'react';\nimport HeadingScreen from '../../components/HeadingScreen';\nimport { useWordsDone } from './useHooks';\nimport connect from '../../state/connect';\nimport { Loading, Layout } from '../../components';\nimport Word from '../Homepage/Word';\nimport theme from '../../configs/theme';\n\nconst WordsDone = ({ user }: { user: any }) => {\n  const [loading, words] = useWordsDone(user);\n\n  if (loading) return <Loading />;\n\n  const width = `${(words.length / 3000) * 100}%`;\n\n  return (\n    <Layout>\n      <HeadingScreen title=\"Words done\" />\n\n      <div style={{ padding: '10px 30px 20px' }}>\n        <h2 style={{ lineHeight: 1.5 }}>I have been learned vocabulary</h2>\n\n        <div\n          style={{\n            height: 50,\n            background: theme.color.secondary,\n            borderRadius: 10,\n            position: 'relative',\n            overflow: 'hidden',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          <div\n            style={{\n              width,\n              height: 50,\n              background: theme.color.primary,\n              position: 'absolute',\n              left: 0\n            }}\n          ></div>\n          <span\n            style={{\n              position: 'relative',\n              zIndex: 10,\n              fontSize: 20,\n              fontWeight: 700,\n              fontFamily: theme.font.family.secondary\n            }}\n          >{`${words.length}/3000`}</span>\n        </div>\n      </div>\n\n      <div>\n        {words.map((w, i) => (\n          <Word\n            key={w.word}\n            word={{ ...w, number: i, type: 'month' }}\n            type=\"month\"\n          />\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nconst enhance = connect([{ values: ['user'], context: 'authContext' }]);\n\nexport default enhance(WordsDone);\n"],"sourceRoot":""}